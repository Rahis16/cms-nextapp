{
    "sourceFile": "app/menu/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 77,
            "patches": [
                {
                    "date": 1748772323399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748772333469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { FoodCard } from '@/components/FoodCard';\r\n+\r\n+export default function Menu() {\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+    // TODO: Implement cart logic\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748772464192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { FoodCard } from '@/components/FoodCard';\r\n+\r\n+export default function Menu() {\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+    // TODO: Implement cart logic\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748772499268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,43 +15,9 @@\n         price={299}\r\n         onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n       />\r\n       <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-\r\n-export default function Menu() {\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-    // TODO: Implement cart logic\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-      <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n         name=\"Cheeseburger\"\r\n         description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n         price={199}\r\n         onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n@@ -65,38 +31,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-\r\n-export default function Menu() {\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-    // TODO: Implement cart logic\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748772516865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { FoodCard } from '@/components/FoodCard';\r\n+\r\n+export default function Menu() {\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+    // TODO: Implement cart logic\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748772621562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+\r\n+\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+\r\n+export default function Menu() {\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+    // TODO: Implement cart logic\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748772653874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+\r\n+export default function Menu() {\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const timer = setTimeout(() => setLoading(false), 1000);\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <div key={i} className=\"rounded shadow-lg bg-gray-200 animate-pulse h-80\" />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748772740735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n \r\n export default function Menu() {\r\n   const [loading, setLoading] = useState(true);\r\n \r\n@@ -18,9 +19,9 @@\n   if (loading) {\r\n     return (\r\n       <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n         {[1, 2, 3].map((i) => (\r\n-          <div key={i} className=\"rounded shadow-lg bg-gray-200 animate-pulse h-80\" />\r\n+          <FoodCardSkeleton key={i} />\r\n         ))}\r\n       </div>\r\n     );\r\n   }\r\n@@ -50,108 +51,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-\r\n-\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-\r\n-export default function Menu() {\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-    // TODO: Implement cart logic\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-\r\n-export default function Menu() {\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-    // TODO: Implement cart logic\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-\r\n-export default function Menu() {\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-    // TODO: Implement cart logic\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748778879855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,7 +48,14 @@\n         description=\"Creamy Alfredo pasta with mushrooms.\"\r\n         price={249}\r\n         onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n       />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1748778886344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         price={249}\r\n         onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n       />\r\n       <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n+        imageSrc=\"/images/sample.jpg\"\r\n         name=\"Penne Alfredo\"\r\n         description=\"Creamy Alfredo pasta with mushrooms.\"\r\n         price={249}\r\n         onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n"
                },
                {
                    "date": 1748780116001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+export default function Menu() {\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const timer = setTimeout(() => setLoading(false), 1000);\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3  gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748780122655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3  gap-6\">\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl: gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n@@ -58,65 +58,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-export default function Menu() {\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const timer = setTimeout(() => setLoading(false), 1000);\r\n-    return () => clearTimeout(timer);\r\n-  }, []);\r\n-\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748780129993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl: gap-6\">\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl:grid-co gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780135813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl:grid-co gap-6\">\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780164072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+export default function Menu() {\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const timer = setTimeout(() => setLoading(false), 1000);\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748780182849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+    <div className=\"p-6 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n@@ -65,65 +65,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-export default function Menu() {\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const timer = setTimeout(() => setLoading(false), 1000);\r\n-    return () => clearTimeout(timer);\r\n-  }, []);\r\n-\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748780196288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780202623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+export default function Menu() {\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const timer = setTimeout(() => setLoading(false), 1000);\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-6 grid grid-cols-1 sm:grid md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748780207875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6 grid grid-cols-1 sm:grid md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+    <div className=\"p-6 grid grid-cols-1 sm:grid-cols md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780220193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+export default function Menu() {\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const timer = setTimeout(() => setLoading(false), 1000);\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-6 grid grid-cols-2 sm:grid-cols-1 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748780235527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,140 +65,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-export default function Menu() {\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const timer = setTimeout(() => setLoading(false), 1000);\r\n-    return () => clearTimeout(timer);\r\n-  }, []);\r\n-\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-1 sm:grid-cols md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-export default function Menu() {\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const timer = setTimeout(() => setLoading(false), 1000);\r\n-    return () => clearTimeout(timer);\r\n-  }, []);\r\n-\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748780247795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6 grid grid-cols-2 sm:grid-cols-1 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+    <div className=\"p-6 grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780262848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-6 grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+    <div className=\"p-6 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780276071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+export default function Menu() {\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const timer = setTimeout(() => setLoading(false), 1000);\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748780290901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-3 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+    <div className=\"p-4 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n@@ -65,72 +65,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-export default function Menu() {\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const timer = setTimeout(() => setLoading(false), 1000);\r\n-    return () => clearTimeout(timer);\r\n-  }, []);\r\n-\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-6 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748780299217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-4 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+    <div className=\"p-4 sm:p-2 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780327743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+export default function Menu() {\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const timer = setTimeout(() => setLoading(false), 1000);\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748780369650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-3 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n@@ -65,72 +65,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-export default function Menu() {\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const timer = setTimeout(() => setLoading(false), 1000);\r\n-    return () => clearTimeout(timer);\r\n-  }, []);\r\n-\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-4 sm:p-2 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-5 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748780607319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+export default function Menu() {\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const timer = setTimeout(() => setLoading(false), 1000);\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-2.5 grid grid-cols-1 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748780634338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-1 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-1 sm md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n@@ -65,72 +65,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-export default function Menu() {\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const timer = setTimeout(() => setLoading(false), 1000);\r\n-    return () => clearTimeout(timer);\r\n-  }, []);\r\n-\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-2.5 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748780640797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-1 sm md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780654957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780666902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780715009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780746776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780840318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3  xl:grid-cols-4 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780846955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3  xl:grid-cols-4 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols- xl:grid-cols-4 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780867048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols- xl:grid-cols-4 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748780875037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-3 gap-6\">\r\n+    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748784116920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+export default function Menu() {\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const timer = setTimeout(() => setLoading(false), 1000);\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-1 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6\">\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pizza.jpg\"\r\n+        name=\"Margherita Pizza\"\r\n+        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n+        price={299}\r\n+        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/burger.jpg\"\r\n+        name=\"Cheeseburger\"\r\n+        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n+        price={199}\r\n+        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/pasta.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+      <FoodCard\r\n+        imageSrc=\"/images/sample.jpg\"\r\n+        name=\"Penne Alfredo\"\r\n+        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n+        price={249}\r\n+        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748792196350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-1 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6\">\r\n+    <div className=\"p-1 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 \">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n@@ -65,72 +65,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-export default function Menu() {\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const timer = setTimeout(() => setLoading(false), 1000);\r\n-    return () => clearTimeout(timer);\r\n-  }, []);\r\n-\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-2.5 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748792384492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-1 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 \">\r\n+    <div className=\"p-2 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748792472532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-2 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n       <FoodCard\r\n         imageSrc=\"/images/pizza.jpg\"\r\n         name=\"Margherita Pizza\"\r\n         description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n"
                },
                {
                    "date": 1748795661312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,36 @@\n import { useEffect, useState } from 'react';\r\n import { FoodCard } from '@/components/FoodCard';\r\n import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n \r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n+  // Fetch products from Django API\r\n   useEffect(() => {\r\n-    const timer = setTimeout(() => setLoading(false), 1000);\r\n-    return () => clearTimeout(timer);\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await fetch('http://localhost:8000/api/products/');\r\n+        const data = await res.json();\r\n+        setProducts(data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n   }, []);\r\n \r\n   const handleAddToCart = (foodName: string) => {\r\n     console.log(`${foodName} added to cart`);\r\n@@ -27,42 +49,17 @@\n   }\r\n \r\n   return (\r\n     <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pizza.jpg\"\r\n-        name=\"Margherita Pizza\"\r\n-        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n-        price={299}\r\n-        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/burger.jpg\"\r\n-        name=\"Cheeseburger\"\r\n-        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n-        price={199}\r\n-        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/pasta.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n-      <FoodCard\r\n-        imageSrc=\"/images/sample.jpg\"\r\n-        name=\"Penne Alfredo\"\r\n-        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n-        price={249}\r\n-        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n-      />\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => handleAddToCart(product.name)}\r\n+        />\r\n+      ))}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1748795813037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   // Fetch products from Django API\r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n-        const res = await fetch('http://localhost:8000/api/products/');\r\n+        const res = await fetch('http://127.0.0.1:8000/api/products/');\r\n         const data = await res.json();\r\n         setProducts(data);\r\n       } catch (err) {\r\n         console.error('Failed to fetch products:', err);\r\n"
                },
                {
                    "date": 1748795835471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  // Fetch products from Django API\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await fetch('http://localhost:8000/api/products/');\r\n+        const data = await res.json();\r\n+        setProducts(data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+  const handleAddToCart = (foodName: string) => {\r\n+    console.log(`${foodName} added to cart`);\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => handleAddToCart(product.name)}\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748796511750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n import { FoodCard } from '@/components/FoodCard';\r\n import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n \r\n type Product = {\r\n@@ -16,15 +17,13 @@\n export default function Menu() {\r\n   const [products, setProducts] = useState<Product[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n-  // Fetch products from Django API\r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n-        const res = await fetch('http://localhost:8000/api/products/');\r\n-        const data = await res.json();\r\n-        setProducts(data);\r\n+        const res = await axios.get<Product[]>('http://localhost:8000/api/products/');\r\n+        setProducts(res.data);\r\n       } catch (err) {\r\n         console.error('Failed to fetch products:', err);\r\n       } finally {\r\n         setLoading(false);\r\n@@ -62,69 +61,4 @@\n       ))}\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  // Fetch products from Django API\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await fetch('http://127.0.0.1:8000/api/products/');\r\n-        const data = await res.json();\r\n-        setProducts(data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => handleAddToCart(product.name)}\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748797022504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,30 @@\n \r\n     fetchProducts();\r\n   }, []);\r\n \r\n-  const handleAddToCart = (foodName: string) => {\r\n-    console.log(`${foodName} added to cart`);\r\n+  // Add to cart using product ID and quantity (1 for example)\r\n+  const handleAddToCart = async (productId: number) => {\r\n+    try {\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/api/cart/add/',\r\n+        {\r\n+          product_id: productId,\r\n+          quantity: 1,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            // Add your auth token here if required\r\n+            // Authorization: `Token YOUR_AUTH_TOKEN`\r\n+          },\r\n+        }\r\n+      );\r\n+      console.log('Added to cart:', res.data);\r\n+      alert('Added to cart successfully!');\r\n+    } catch (error) {\r\n+      console.error('Failed to add to cart:', error);\r\n+      alert('Failed to add to cart.');\r\n+    }\r\n   };\r\n \r\n   if (loading) {\r\n     return (\r\n@@ -55,9 +75,9 @@\n           imageSrc={product.image}\r\n           name={product.name}\r\n           description={product.desc}\r\n           price={parseFloat(product.price)}\r\n-          onAddToCart={() => handleAddToCart(product.name)}\r\n+          onAddToCart={() => handleAddToCart(product.id)} // Pass product ID here\r\n         />\r\n       ))}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1748797194307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,16 +13,35 @@\n   price: string;\r\n   category: number;\r\n };\r\n \r\n+// Helper function to get CSRF token from cookies\r\n+function getCookie(name: string) {\r\n+  let cookieValue = null;\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n+    for (let i = 0; i < cookies.length; i++) {\r\n+      const cookie = cookies[i].trim();\r\n+      // Does this cookie string begin with the name we want?\r\n+      if (cookie.startsWith(name + '=')) {\r\n+        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n+        break;\r\n+      }\r\n+    }\r\n+  }\r\n+  return cookieValue;\r\n+}\r\n+\r\n export default function Menu() {\r\n   const [products, setProducts] = useState<Product[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n-        const res = await axios.get<Product[]>('http://localhost:8000/api/products/');\r\n+        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n+          withCredentials: true,  // send cookies\r\n+        });\r\n         setProducts(res.data);\r\n       } catch (err) {\r\n         console.error('Failed to fetch products:', err);\r\n       } finally {\r\n@@ -34,8 +53,9 @@\n   }, []);\r\n \r\n   // Add to cart using product ID and quantity (1 for example)\r\n   const handleAddToCart = async (productId: number) => {\r\n+    const csrftoken = getCookie('csrftoken');  // get CSRF token from cookie\r\n     try {\r\n       const res = await axios.post(\r\n         'http://localhost:8000/api/cart/add/',\r\n         {\r\n@@ -43,11 +63,11 @@\n           quantity: 1,\r\n         },\r\n         {\r\n           headers: {\r\n-            // Add your auth token here if required\r\n-            // Authorization: `Token YOUR_AUTH_TOKEN`\r\n+            'X-CSRFToken': csrftoken ?? '',\r\n           },\r\n+          withCredentials: true,  // make sure to send cookies with request\r\n         }\r\n       );\r\n       console.log('Added to cart:', res.data);\r\n       alert('Added to cart successfully!');\r\n"
                },
                {
                    "date": 1748797408279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,31 +53,33 @@\n   }, []);\r\n \r\n   // Add to cart using product ID and quantity (1 for example)\r\n   const handleAddToCart = async (productId: number) => {\r\n-    const csrftoken = getCookie('csrftoken');  // get CSRF token from cookie\r\n-    try {\r\n-      const res = await axios.post(\r\n-        'http://localhost:8000/api/cart/add/',\r\n-        {\r\n-          product_id: productId,\r\n-          quantity: 1,\r\n+  const csrftoken = getCookie('csrftoken');\r\n+\r\n+  try {\r\n+    const res = await axios.post(\r\n+      'http://localhost:8000/api/cart/add/',\r\n+      {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'X-CSRFToken': csrftoken ?? '',\r\n         },\r\n-        {\r\n-          headers: {\r\n-            'X-CSRFToken': csrftoken ?? '',\r\n-          },\r\n-          withCredentials: true,  // make sure to send cookies with request\r\n-        }\r\n-      );\r\n-      console.log('Added to cart:', res.data);\r\n-      alert('Added to cart successfully!');\r\n-    } catch (error) {\r\n-      console.error('Failed to add to cart:', error);\r\n-      alert('Failed to add to cart.');\r\n-    }\r\n-  };\r\n+        withCredentials: true, // very important!\r\n+      }\r\n+    );\r\n+    console.log('Added to cart:', res.data);\r\n+    alert('Added to cart successfully!');\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart.');\r\n+  }\r\n+};\r\n \r\n+\r\n   if (loading) {\r\n     return (\r\n       <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n         {[1, 2, 3].map((i) => (\r\n"
                },
                {
                    "date": 1748797507431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+// Helper function to get CSRF token from cookies\r\n+function getCookie(name: string) {\r\n+  let cookieValue = null;\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n+    for (let i = 0; i < cookies.length; i++) {\r\n+      const cookie = cookies[i].trim();\r\n+      // Does this cookie string begin with the name we want?\r\n+      if (cookie.startsWith(name + '=')) {\r\n+        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n+        break;\r\n+      }\r\n+    }\r\n+  }\r\n+  return cookieValue;\r\n+}\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n+          withCredentials: true,  // send cookies\r\n+        });\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+  function getCookie(name: string) {\r\n+  const cookies = document.cookie.split('; ');\r\n+  for (const cookie of cookies) {\r\n+    const [key, value] = cookie.split('=');\r\n+    if (key === name) return value;\r\n+  }\r\n+  return null;\r\n+}\r\n+\r\n+const handleAddToCart = async (productId: number) => {\r\n+  const csrftoken = getCookie('csrftoken');\r\n+  console.log('CSRF Token:', csrftoken); // DEBUG: verify token here\r\n+\r\n+  try {\r\n+    const res = await axios.post(\r\n+      'http://localhost:8000/api/cart/add/',\r\n+      { product_id: productId, quantity: 1 },\r\n+      {\r\n+        headers: { 'X-CSRFToken': csrftoken ?? '' },\r\n+        withCredentials: true,\r\n+      }\r\n+    );\r\n+    console.log('Added to cart:', res.data);\r\n+    alert('Added to cart successfully!');\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart.');\r\n+  }\r\n+};\r\n+\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => handleAddToCart(product.id)} // Pass product ID here\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748797682780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,30 +60,23 @@\n   }\r\n   return null;\r\n }\r\n \r\n-const handleAddToCart = async (productId: number) => {\r\n-  const csrftoken = getCookie('csrftoken');\r\n-  console.log('CSRF Token:', csrftoken); // DEBUG: verify token here\r\n+const csrftoken = getCookie('csrftoken'); // You can use a helper function to get CSRF token from cookie\r\n \r\n-  try {\r\n-    const res = await axios.post(\r\n-      'http://localhost:8000/api/cart/add/',\r\n-      { product_id: productId, quantity: 1 },\r\n-      {\r\n-        headers: { 'X-CSRFToken': csrftoken ?? '' },\r\n-        withCredentials: true,\r\n-      }\r\n-    );\r\n-    console.log('Added to cart:', res.data);\r\n-    alert('Added to cart successfully!');\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart.');\r\n+axios.post('http://localhost:8000/api/cart/add/', \r\n+  {\r\n+    product_id: productId,\r\n+    quantity: 1,\r\n+  }, \r\n+  {\r\n+    headers: {\r\n+      'X-CSRFToken': csrftoken,\r\n+    },\r\n+    withCredentials: true,  // important to send cookies (sessionid)\r\n   }\r\n-};\r\n+);\r\n \r\n-\r\n   if (loading) {\r\n     return (\r\n       <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n         {[1, 2, 3].map((i) => (\r\n@@ -107,110 +100,4 @@\n       ))}\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-// Helper function to get CSRF token from cookies\r\n-function getCookie(name: string) {\r\n-  let cookieValue = null;\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n-    for (let i = 0; i < cookies.length; i++) {\r\n-      const cookie = cookies[i].trim();\r\n-      // Does this cookie string begin with the name we want?\r\n-      if (cookie.startsWith(name + '=')) {\r\n-        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n-        break;\r\n-      }\r\n-    }\r\n-  }\r\n-  return cookieValue;\r\n-}\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,  // send cookies\r\n-        });\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-  // Add to cart using product ID and quantity (1 for example)\r\n-  const handleAddToCart = async (productId: number) => {\r\n-  const csrftoken = getCookie('csrftoken');\r\n-\r\n-  try {\r\n-    const res = await axios.post(\r\n-      'http://localhost:8000/api/cart/add/',\r\n-      {\r\n-        product_id: productId,\r\n-        quantity: 1,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'X-CSRFToken': csrftoken ?? '',\r\n-        },\r\n-        withCredentials: true, // very important!\r\n-      }\r\n-    );\r\n-    console.log('Added to cart:', res.data);\r\n-    alert('Added to cart successfully!');\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart.');\r\n-  }\r\n-};\r\n-\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => handleAddToCart(product.id)} // Pass product ID here\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748797701216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,32 +51,9 @@\n \r\n     fetchProducts();\r\n   }, []);\r\n \r\n-  function getCookie(name: string) {\r\n-  const cookies = document.cookie.split('; ');\r\n-  for (const cookie of cookies) {\r\n-    const [key, value] = cookie.split('=');\r\n-    if (key === name) return value;\r\n-  }\r\n-  return null;\r\n-}\r\n-\r\n-const csrftoken = getCookie('csrftoken'); // You can use a helper function to get CSRF token from cookie\r\n-\r\n-axios.post('http://localhost:8000/api/cart/add/', \r\n-  {\r\n-    product_id: productId,\r\n-    quantity: 1,\r\n-  }, \r\n-  {\r\n-    headers: {\r\n-      'X-CSRFToken': csrftoken,\r\n-    },\r\n-    withCredentials: true,  // important to send cookies (sessionid)\r\n-  }\r\n-);\r\n-\r\n+  \r\n   if (loading) {\r\n     return (\r\n       <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n         {[1, 2, 3].map((i) => (\r\n"
                },
                {
                    "date": 1748797720091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,43 @@\n \r\n     fetchProducts();\r\n   }, []);\r\n \r\n+\r\n+  function getCookie(name: string): string | null {\r\n+  const cookies = document.cookie.split('; ');\r\n+  for (const cookie of cookies) {\r\n+    const [key, value] = cookie.split('=');\r\n+    if (key === name) return decodeURIComponent(value);\r\n+  }\r\n+  return null;\r\n+}\r\n+\r\n+async function addToCart(productId: number) {\r\n+  const csrftoken = getCookie('csrftoken');\r\n+\r\n+  try {\r\n+    const response = await axios.post(\r\n+      'http://localhost:8000/api/cart/add/',\r\n+      {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'X-CSRFToken': csrftoken ?? '',\r\n+        },\r\n+        withCredentials: true, // send cookies including sessionid\r\n+      }\r\n+    );\r\n+    console.log('Added to cart:', response.data);\r\n+    alert('Added to cart successfully!');\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart.');\r\n+  }\r\n+}\r\n+\r\n   \r\n   if (loading) {\r\n     return (\r\n       <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n"
                },
                {
                    "date": 1748797750468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n           imageSrc={product.image}\r\n           name={product.name}\r\n           description={product.desc}\r\n           price={parseFloat(product.price)}\r\n-          onAddToCart={() => handleAddToCart(product.id)} // Pass product ID here\r\n+          onAddToCart={() => a(product.id)} // Pass product ID here\r\n         />\r\n       ))}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1749063125496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,103 +13,60 @@\n   price: string;\r\n   category: number;\r\n };\r\n \r\n-// Helper function to get CSRF token from cookies\r\n-function getCookie(name: string) {\r\n-  let cookieValue = null;\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n-    for (let i = 0; i < cookies.length; i++) {\r\n-      const cookie = cookies[i].trim();\r\n-      // Does this cookie string begin with the name we want?\r\n-      if (cookie.startsWith(name + '=')) {\r\n-        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n-        break;\r\n-      }\r\n-    }\r\n-  }\r\n-  return cookieValue;\r\n+// Helper to check if a cookie exists\r\n+function cookieExists(name: string) {\r\n+  if (typeof document === 'undefined') return false;\r\n+  return document.cookie\r\n+    .split(';')\r\n+    .some(cookie => cookie.trim().startsWith(`${name}=`));\r\n }\r\n \r\n export default function Menu() {\r\n   const [products, setProducts] = useState<Product[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState<string | null>(null);\r\n \r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n+        // Check for access token in cookie\r\n+        const hasToken = cookieExists('access_token'); // change this if your JWT cookie has a different name\r\n+        if (!hasToken) {\r\n+          setError('User not authenticated');\r\n+          return;\r\n+        }\r\n+\r\n         const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,  // send cookies\r\n+          withCredentials: true, // ensures cookies (JWT) are sent\r\n         });\r\n         setProducts(res.data);\r\n       } catch (err) {\r\n         console.error('Failed to fetch products:', err);\r\n+        setError('Failed to fetch products');\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n     fetchProducts();\r\n   }, []);\r\n \r\n+  if (loading) return (\r\n+    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n+      {[...Array(8)].map((_, i) => (\r\n+        <FoodCardSkeleton key={i} />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n \r\n-  function getCookie(name: string): string | null {\r\n-  const cookies = document.cookie.split('; ');\r\n-  for (const cookie of cookies) {\r\n-    const [key, value] = cookie.split('=');\r\n-    if (key === name) return decodeURIComponent(value);\r\n-  }\r\n-  return null;\r\n-}\r\n+  if (error) return <div className=\"text-red-500 text-center\">{error}</div>;\r\n \r\n-async function addToCart(productId: number) {\r\n-  const csrftoken = getCookie('csrftoken');\r\n-\r\n-  try {\r\n-    const response = await axios.post(\r\n-      'http://localhost:8000/api/cart/add/',\r\n-      {\r\n-        product_id: productId,\r\n-        quantity: 1,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'X-CSRFToken': csrftoken ?? '',\r\n-        },\r\n-        withCredentials: true, // send cookies including sessionid\r\n-      }\r\n-    );\r\n-    console.log('Added to cart:', response.data);\r\n-    alert('Added to cart successfully!');\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart.');\r\n-  }\r\n-}\r\n-\r\n-  \r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n   return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => a(product.id)} // Pass product ID here\r\n-        />\r\n+    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n+      {products.map(product => (\r\n+        <FoodCard key={product.id} product={product} />\r\n       ))}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1749063133241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,60 +13,103 @@\n   price: string;\r\n   category: number;\r\n };\r\n \r\n-// Helper to check if a cookie exists\r\n-function cookieExists(name: string) {\r\n-  if (typeof document === 'undefined') return false;\r\n-  return document.cookie\r\n-    .split(';')\r\n-    .some(cookie => cookie.trim().startsWith(`${name}=`));\r\n+// Helper function to get CSRF token from cookies\r\n+function getCookie(name: string) {\r\n+  let cookieValue = null;\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n+    for (let i = 0; i < cookies.length; i++) {\r\n+      const cookie = cookies[i].trim();\r\n+      // Does this cookie string begin with the name we want?\r\n+      if (cookie.startsWith(name + '=')) {\r\n+        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n+        break;\r\n+      }\r\n+    }\r\n+  }\r\n+  return cookieValue;\r\n }\r\n \r\n export default function Menu() {\r\n   const [products, setProducts] = useState<Product[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState<string | null>(null);\r\n \r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n-        // Check for access token in cookie\r\n-        const hasToken = cookieExists('access_token'); // change this if your JWT cookie has a different name\r\n-        if (!hasToken) {\r\n-          setError('User not authenticated');\r\n-          return;\r\n-        }\r\n-\r\n         const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true, // ensures cookies (JWT) are sent\r\n+          withCredentials: true,  // send cookies\r\n         });\r\n         setProducts(res.data);\r\n       } catch (err) {\r\n         console.error('Failed to fetch products:', err);\r\n-        setError('Failed to fetch products');\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n     fetchProducts();\r\n   }, []);\r\n \r\n-  if (loading) return (\r\n-    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n-      {[...Array(8)].map((_, i) => (\r\n-        <FoodCardSkeleton key={i} />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n \r\n-  if (error) return <div className=\"text-red-500 text-center\">{error}</div>;\r\n+  function getCookie(name: string): string | null {\r\n+  const cookies = document.cookie.split('; ');\r\n+  for (const cookie of cookies) {\r\n+    const [key, value] = cookie.split('=');\r\n+    if (key === name) return decodeURIComponent(value);\r\n+  }\r\n+  return null;\r\n+}\r\n \r\n+async function addToCart(productId: number) {\r\n+  const csrftoken = getCookie('csrftoken');\r\n+\r\n+  try {\r\n+    const response = await axios.post(\r\n+      'http://localhost:8000/api/cart/add/',\r\n+      {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'X-CSRFToken': csrftoken ?? '',\r\n+        },\r\n+        withCredentials: true, // send cookies including sessionid\r\n+      }\r\n+    );\r\n+    console.log('Added to cart:', response.data);\r\n+    alert('Added to cart successfully!');\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart.');\r\n+  }\r\n+}\r\n+\r\n+  \r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n   return (\r\n-    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n-      {products.map(product => (\r\n-        <FoodCard key={product.id} product={product} />\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n+        />\r\n       ))}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1749063138918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,103 +13,60 @@\n   price: string;\r\n   category: number;\r\n };\r\n \r\n-// Helper function to get CSRF token from cookies\r\n-function getCookie(name: string) {\r\n-  let cookieValue = null;\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n-    for (let i = 0; i < cookies.length; i++) {\r\n-      const cookie = cookies[i].trim();\r\n-      // Does this cookie string begin with the name we want?\r\n-      if (cookie.startsWith(name + '=')) {\r\n-        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n-        break;\r\n-      }\r\n-    }\r\n-  }\r\n-  return cookieValue;\r\n+// Helper to check if a cookie exists\r\n+function cookieExists(name: string) {\r\n+  if (typeof document === 'undefined') return false;\r\n+  return document.cookie\r\n+    .split(';')\r\n+    .some(cookie => cookie.trim().startsWith(`${name}=`));\r\n }\r\n \r\n export default function Menu() {\r\n   const [products, setProducts] = useState<Product[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState<string | null>(null);\r\n \r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n+        // Check for access token in cookie\r\n+        const hasToken = cookieExists('access_token'); // change this if your JWT cookie has a different name\r\n+        if (!hasToken) {\r\n+          setError('User not authenticated');\r\n+          return;\r\n+        }\r\n+\r\n         const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,  // send cookies\r\n+          withCredentials: true, // ensures cookies (JWT) are sent\r\n         });\r\n         setProducts(res.data);\r\n       } catch (err) {\r\n         console.error('Failed to fetch products:', err);\r\n+        setError('Failed to fetch products');\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n     fetchProducts();\r\n   }, []);\r\n \r\n+  if (loading) return (\r\n+    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n+      {[...Array(8)].map((_, i) => (\r\n+        <FoodCardSkeleton key={i} />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n \r\n-  function getCookie(name: string): string | null {\r\n-  const cookies = document.cookie.split('; ');\r\n-  for (const cookie of cookies) {\r\n-    const [key, value] = cookie.split('=');\r\n-    if (key === name) return decodeURIComponent(value);\r\n-  }\r\n-  return null;\r\n-}\r\n+  if (error) return <div className=\"text-red-500 text-center\">{error}</div>;\r\n \r\n-async function addToCart(productId: number) {\r\n-  const csrftoken = getCookie('csrftoken');\r\n-\r\n-  try {\r\n-    const response = await axios.post(\r\n-      'http://localhost:8000/api/cart/add/',\r\n-      {\r\n-        product_id: productId,\r\n-        quantity: 1,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'X-CSRFToken': csrftoken ?? '',\r\n-        },\r\n-        withCredentials: true, // send cookies including sessionid\r\n-      }\r\n-    );\r\n-    console.log('Added to cart:', response.data);\r\n-    alert('Added to cart successfully!');\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart.');\r\n-  }\r\n-}\r\n-\r\n-  \r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n   return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n-        />\r\n+    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n+      {products.map(product => (\r\n+        <FoodCard key={product.id} product={product} />\r\n       ))}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1749063205686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,60 +13,60 @@\n   price: string;\r\n   category: number;\r\n };\r\n \r\n-// Helper to check if a cookie exists\r\n-function cookieExists(name: string) {\r\n-  if (typeof document === 'undefined') return false;\r\n-  return document.cookie\r\n-    .split(';')\r\n-    .some(cookie => cookie.trim().startsWith(`${name}=`));\r\n+// Helper function to get a cookie by name\r\n+function getCookie(name: string) {\r\n+  let cookieValue = null;\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n+    for (let i = 0; i < cookies.length; i++) {\r\n+      const cookie = cookies[i].trim();\r\n+      if (cookie.startsWith(name + '=')) {\r\n+        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n+        break;\r\n+      }\r\n+    }\r\n+  }\r\n+  return cookieValue;\r\n }\r\n \r\n export default function Menu() {\r\n   const [products, setProducts] = useState<Product[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [error, setError] = useState<string | null>(null);\r\n \r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n-        // Check for access token in cookie\r\n-        const hasToken = cookieExists('access_token'); // change this if your JWT cookie has a different name\r\n-        if (!hasToken) {\r\n-          setError('User not authenticated');\r\n+        const accessToken = getCookie('access'); // your JWT access token cookie name\r\n+\r\n+        if (!accessToken) {\r\n+          console.warn('No access token found. Skipping fetch.');\r\n           return;\r\n         }\r\n \r\n         const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true, // ensures cookies (JWT) are sent\r\n+          withCredentials: true,\r\n+          headers: {\r\n+            Authorization: `Bearer ${accessToken}`,\r\n+          },\r\n         });\r\n+\r\n         setProducts(res.data);\r\n       } catch (err) {\r\n         console.error('Failed to fetch products:', err);\r\n-        setError('Failed to fetch products');\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n     fetchProducts();\r\n   }, []);\r\n \r\n-  if (loading) return (\r\n-    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n-      {[...Array(8)].map((_, i) => (\r\n-        <FoodCardSkeleton key={i} />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-\r\n-  if (error) return <div className=\"text-red-500 text-center\">{error}</div>;\r\n-\r\n   return (\r\n-    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n-      {products.map(product => (\r\n-        <FoodCard key={product.id} product={product} />\r\n-      ))}\r\n+    <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n+      {loading\r\n+        ? Array.from({ length: 8 }).map((_, idx) => <FoodCardSkeleton key={idx} />)\r\n+        : products.map(product => <FoodCard key={product.id} product={product} />)}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1749063219827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,15 +13,16 @@\n   price: string;\r\n   category: number;\r\n };\r\n \r\n-// Helper function to get a cookie by name\r\n+// Helper function to get CSRF token from cookies\r\n function getCookie(name: string) {\r\n   let cookieValue = null;\r\n   if (typeof document !== 'undefined') {\r\n     const cookies = document.cookie ? document.cookie.split(';') : [];\r\n     for (let i = 0; i < cookies.length; i++) {\r\n       const cookie = cookies[i].trim();\r\n+      // Does this cookie string begin with the name we want?\r\n       if (cookie.startsWith(name + '=')) {\r\n         cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n         break;\r\n       }\r\n@@ -36,22 +37,11 @@\n \r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n-        const accessToken = getCookie('access'); // your JWT access token cookie name\r\n-\r\n-        if (!accessToken) {\r\n-          console.warn('No access token found. Skipping fetch.');\r\n-          return;\r\n-        }\r\n-\r\n         const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,\r\n-          headers: {\r\n-            Authorization: `Bearer ${accessToken}`,\r\n-          },\r\n+          withCredentials: true,  // send cookies\r\n         });\r\n-\r\n         setProducts(res.data);\r\n       } catch (err) {\r\n         console.error('Failed to fetch products:', err);\r\n       } finally {\r\n@@ -61,12 +51,65 @@\n \r\n     fetchProducts();\r\n   }, []);\r\n \r\n+\r\n+  function getCookie(name: string): string | null {\r\n+  const cookies = document.cookie.split('; ');\r\n+  for (const cookie of cookies) {\r\n+    const [key, value] = cookie.split('=');\r\n+    if (key === name) return decodeURIComponent(value);\r\n+  }\r\n+  return null;\r\n+}\r\n+\r\n+async function addToCart(productId: number) {\r\n+  const csrftoken = getCookie('csrftoken');\r\n+\r\n+  try {\r\n+    const response = await axios.post(\r\n+      'http://localhost:8000/api/cart/add/',\r\n+      {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'X-CSRFToken': csrftoken ?? '',\r\n+        },\r\n+        withCredentials: true, // send cookies including sessionid\r\n+      }\r\n+    );\r\n+    console.log('Added to cart:', response.data);\r\n+    alert('Added to cart successfully!');\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart.');\r\n+  }\r\n+}\r\n+\r\n+  \r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n   return (\r\n-    <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n-      {loading\r\n-        ? Array.from({ length: 8 }).map((_, idx) => <FoodCardSkeleton key={idx} />)\r\n-        : products.map(product => <FoodCard key={product.id} product={product} />)}\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n+        />\r\n+      ))}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1749063267324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n   if (typeof document !== 'undefined') {\r\n     const cookies = document.cookie ? document.cookie.split(';') : [];\r\n     for (let i = 0; i < cookies.length; i++) {\r\n       const cookie = cookies[i].trim();\r\n-      // Does this cookie string begin with the name we want?\r\n       if (cookie.startsWith(name + '=')) {\r\n         cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n         break;\r\n       }\r\n@@ -38,9 +37,9 @@\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n         const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,  // send cookies\r\n+          withCredentials: true,  // send cookies (sessionid or JWT cookie)\r\n         });\r\n         setProducts(res.data);\r\n       } catch (err) {\r\n         console.error('Failed to fetch products:', err);\r\n@@ -51,44 +50,45 @@\n \r\n     fetchProducts();\r\n   }, []);\r\n \r\n+  // You already defined this helper twice, remove duplicate if you want, \r\n+  // but I'll keep as you wrote\r\n \r\n   function getCookie(name: string): string | null {\r\n-  const cookies = document.cookie.split('; ');\r\n-  for (const cookie of cookies) {\r\n-    const [key, value] = cookie.split('=');\r\n-    if (key === name) return decodeURIComponent(value);\r\n+    const cookies = document.cookie.split('; ');\r\n+    for (const cookie of cookies) {\r\n+      const [key, value] = cookie.split('=');\r\n+      if (key === name) return decodeURIComponent(value);\r\n+    }\r\n+    return null;\r\n   }\r\n-  return null;\r\n-}\r\n \r\n-async function addToCart(productId: number) {\r\n-  const csrftoken = getCookie('csrftoken');\r\n+  async function addToCart(productId: number) {\r\n+    const csrftoken = getCookie('csrftoken');\r\n \r\n-  try {\r\n-    const response = await axios.post(\r\n-      'http://localhost:8000/api/cart/add/',\r\n-      {\r\n-        product_id: productId,\r\n-        quantity: 1,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'X-CSRFToken': csrftoken ?? '',\r\n+    try {\r\n+      const response = await axios.post(\r\n+        'http://localhost:8000/api/cart/add/',\r\n+        {\r\n+          product_id: productId,\r\n+          quantity: 1,\r\n         },\r\n-        withCredentials: true, // send cookies including sessionid\r\n-      }\r\n-    );\r\n-    console.log('Added to cart:', response.data);\r\n-    alert('Added to cart successfully!');\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart.');\r\n+        {\r\n+          headers: {\r\n+            'X-CSRFToken': csrftoken ?? '',\r\n+          },\r\n+          withCredentials: true, // send cookies including sessionid\r\n+        }\r\n+      );\r\n+      console.log('Added to cart:', response.data);\r\n+      alert('Added to cart successfully!');\r\n+    } catch (error) {\r\n+      console.error('Failed to add to cart:', error);\r\n+      alert('Failed to add to cart.');\r\n+    }\r\n   }\r\n-}\r\n \r\n-  \r\n   if (loading) {\r\n     return (\r\n       <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n         {[1, 2, 3].map((i) => (\r\n"
                },
                {
                    "date": 1749063302390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+// Helper function to get CSRF token from cookies\r\n+function getCookie(name: string) {\r\n+  let cookieValue = null;\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n+    for (let i = 0; i < cookies.length; i++) {\r\n+      const cookie = cookies[i].trim();\r\n+      // Does this cookie string begin with the name we want?\r\n+      if (cookie.startsWith(name + '=')) {\r\n+        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n+        break;\r\n+      }\r\n+    }\r\n+  }\r\n+  return cookieValue;\r\n+}\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n+          withCredentials: true,  // send cookies\r\n+        });\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+\r\n+  function getCookie(name: string): string | null {\r\n+  const cookies = document.cookie.split('; ');\r\n+  for (const cookie of cookies) {\r\n+    const [key, value] = cookie.split('=');\r\n+    if (key === name) return decodeURIComponent(value);\r\n+  }\r\n+  return null;\r\n+}\r\n+\r\n+async function addToCart(productId: number) {\r\n+  const csrftoken = getCookie('csrftoken');\r\n+\r\n+  try {\r\n+    const response = await axios.post(\r\n+      'http://localhost:8000/api/cart/add/',\r\n+      {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'X-CSRFToken': csrftoken ?? '',\r\n+        },\r\n+        withCredentials: true, // send cookies including sessionid\r\n+      }\r\n+    );\r\n+    console.log('Added to cart:', response.data);\r\n+    alert('Added to cart successfully!');\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart.');\r\n+  }\r\n+}\r\n+\r\n+  \r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749063310393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+// Helper function to get CSRF token from cookies\r\n+function getCookie(name: string) {\r\n+  let cookieValue = null;\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n+    for (let i = 0; i < cookies.length; i++) {\r\n+      const cookie = cookies[i].trim();\r\n+      // Does this cookie string begin with the name we want?\r\n+      if (cookie.startsWith(name + '=')) {\r\n+        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n+        break;\r\n+      }\r\n+    }\r\n+  }\r\n+  return cookieValue;\r\n+}\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n+          withCredentials: true,  // send cookies\r\n+        });\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+\r\n+  function getCookie(name: string): string | null {\r\n+  const cookies = document.cookie.split('; ');\r\n+  for (const cookie of cookies) {\r\n+    const [key, value] = cookie.split('=');\r\n+    if (key === name) return decodeURIComponent(value);\r\n+  }\r\n+  return null;\r\n+}\r\n+\r\n+async function addToCart(productId: number) {\r\n+  const csrftoken = getCookie('csrftoken');\r\n+\r\n+  try {\r\n+    const response = await axios.post(\r\n+      'http://localhost:8000/api/cart/add/',\r\n+      {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'X-CSRFToken': csrftoken ?? '',\r\n+        },\r\n+        withCredentials: true, // send cookies including sessionid\r\n+      }\r\n+    );\r\n+    console.log('Added to cart:', response.data);\r\n+    alert('Added to cart successfully!');\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart.');\r\n+  }\r\n+}\r\n+\r\n+  \r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749063316041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+// Helper function to get CSRF token from cookies\r\n+function getCookie(name: string) {\r\n+  let cookieValue = null;\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n+    for (let i = 0; i < cookies.length; i++) {\r\n+      const cookie = cookies[i].trim();\r\n+      // Does this cookie string begin with the name we want?\r\n+      if (cookie.startsWith(name + '=')) {\r\n+        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n+        break;\r\n+      }\r\n+    }\r\n+  }\r\n+  return cookieValue;\r\n+}\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n+          withCredentials: true,  // send cookies\r\n+        });\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+\r\n+  function getCookie(name: string): string | null {\r\n+  const cookies = document.cookie.split('; ');\r\n+  for (const cookie of cookies) {\r\n+    const [key, value] = cookie.split('=');\r\n+    if (key === name) return decodeURIComponent(value);\r\n+  }\r\n+  return null;\r\n+}\r\n+\r\n+async function addToCart(productId: number) {\r\n+  const csrftoken = getCookie('csrftoken');\r\n+\r\n+  try {\r\n+    const response = await axios.post(\r\n+      'http://localhost:8000/api/cart/add/',\r\n+      {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'X-CSRFToken': csrftoken ?? '',\r\n+        },\r\n+        withCredentials: true, // send cookies including sessionid\r\n+      }\r\n+    );\r\n+    console.log('Added to cart:', response.data);\r\n+    alert('Added to cart successfully!');\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart.');\r\n+  }\r\n+}\r\n+\r\n+  \r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749063534118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,119 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+// Helper function to get cookie value\r\n+function getCookie(name: string): string | null {\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie.split('; ');\r\n+    for (const cookie of cookies) {\r\n+      const [key, value] = cookie.split('=');\r\n+      if (key === name) {\r\n+        return decodeURIComponent(value);\r\n+      }\r\n+    }\r\n+  }\r\n+  return null;\r\n+}\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const accessToken = getCookie('access_token'); // Check access token in cookie\r\n+\r\n+    if (!accessToken) {\r\n+      console.warn('Access token missing in cookies.');\r\n+      setLoading(false); // Stop loading if unauthorized\r\n+      return;\r\n+    }\r\n+\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n+          withCredentials: true,\r\n+        });\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+  const addToCart = async (productId: number) => {\r\n+    const csrftoken = getCookie('csrftoken');\r\n+\r\n+    try {\r\n+      const response = await axios.post(\r\n+        'http://localhost:8000/api/cart/add/',\r\n+        {\r\n+          product_id: productId,\r\n+          quantity: 1,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'X-CSRFToken': csrftoken ?? '',\r\n+          },\r\n+          withCredentials: true,\r\n+        }\r\n+      );\r\n+      console.log('Added to cart:', response.data);\r\n+      alert('Added to cart successfully!');\r\n+    } catch (error) {\r\n+      console.error('Failed to add to cart:', error);\r\n+      alert('Failed to add to cart.');\r\n+    }\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!products.length) {\r\n+    return (\r\n+      <div className=\"p-6 text-center text-gray-600\">\r\n+        {getCookie('access_token')\r\n+          ? 'No products available.'\r\n+          : 'Please log in to view products.'}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)}\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749063541553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,119 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+// Helper function to get cookie value\r\n+function getCookie(name: string): string | null {\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie.split('; ');\r\n+    for (const cookie of cookies) {\r\n+      const [key, value] = cookie.split('=');\r\n+      if (key === name) {\r\n+        return decodeURIComponent(value);\r\n+      }\r\n+    }\r\n+  }\r\n+  return null;\r\n+}\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const accessToken = getCookie('access_token'); // Check access token in cookie\r\n+\r\n+    if (!accessToken) {\r\n+      console.warn('Access token missing in cookies.');\r\n+      setLoading(false); // Stop loading if unauthorized\r\n+      return;\r\n+    }\r\n+\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n+          withCredentials: true,\r\n+        });\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+  const addToCart = async (productId: number) => {\r\n+    const csrftoken = getCookie('csrftoken');\r\n+\r\n+    try {\r\n+      const response = await axios.post(\r\n+        'http://localhost:8000/api/cart/add/',\r\n+        {\r\n+          product_id: productId,\r\n+          quantity: 1,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'X-CSRFToken': csrftoken ?? '',\r\n+          },\r\n+          withCredentials: true,\r\n+        }\r\n+      );\r\n+      console.log('Added to cart:', response.data);\r\n+      alert('Added to cart successfully!');\r\n+    } catch (error) {\r\n+      console.error('Failed to add to cart:', error);\r\n+      alert('Failed to add to cart.');\r\n+    }\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!products.length) {\r\n+    return (\r\n+      <div className=\"p-6 text-center text-gray-600\">\r\n+        {getCookie('access_token')\r\n+          ? 'No products available.'\r\n+          : 'Please log in to view products.'}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)}\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749063888372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import axios from 'axios';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+// Helper function to get CSRF token from cookies\r\n+function getCookie(name: string) {\r\n+  let cookieValue = null;\r\n+  if (typeof document !== 'undefined') {\r\n+    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n+    for (let i = 0; i < cookies.length; i++) {\r\n+      const cookie = cookies[i].trim();\r\n+      // Does this cookie string begin with the name we want?\r\n+      if (cookie.startsWith(name + '=')) {\r\n+        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n+        break;\r\n+      }\r\n+    }\r\n+  }\r\n+  return cookieValue;\r\n+}\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n+          withCredentials: true,  // send cookies\r\n+        });\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+\r\n+  function getCookie(name: string): string | null {\r\n+  const cookies = document.cookie.split('; ');\r\n+  for (const cookie of cookies) {\r\n+    const [key, value] = cookie.split('=');\r\n+    if (key === name) return decodeURIComponent(value);\r\n+  }\r\n+  return null;\r\n+}\r\n+\r\n+async function addToCart(productId: number) {\r\n+  const csrftoken = getCookie('csrftoken');\r\n+\r\n+  try {\r\n+    const response = await axios.post(\r\n+      'http://localhost:8000/api/cart/add/',\r\n+      {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'X-CSRFToken': csrftoken ?? '',\r\n+        },\r\n+        withCredentials: true, // send cookies including sessionid\r\n+      }\r\n+    );\r\n+    console.log('Added to cart:', response.data);\r\n+    alert('Added to cart successfully!');\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart.');\r\n+  }\r\n+}\r\n+\r\n+  \r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749064273905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { axiosWithCsrf } from '@/lib/axiosWithCsrf';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axiosWithCsrf.get<Product[]>('/api/products/');\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+  const addToCart = async (productId: number) => {\r\n+    try {\r\n+      const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      });\r\n+      console.log('Added to cart:', response.data);\r\n+      alert('Added to cart successfully!');\r\n+    } catch (error) {\r\n+      console.error('Failed to add to cart:', error);\r\n+      alert('Failed to add to cart.');\r\n+    }\r\n+  };\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!products.length) {\r\n+    return (\r\n+      <div className=\"p-6 text-center text-gray-600\">\r\n+        No products available.\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)}\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749064322143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,817 +79,4 @@\n       ))}\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-// Helper function to get CSRF token from cookies\r\n-function getCookie(name: string) {\r\n-  let cookieValue = null;\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n-    for (let i = 0; i < cookies.length; i++) {\r\n-      const cookie = cookies[i].trim();\r\n-      // Does this cookie string begin with the name we want?\r\n-      if (cookie.startsWith(name + '=')) {\r\n-        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n-        break;\r\n-      }\r\n-    }\r\n-  }\r\n-  return cookieValue;\r\n-}\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,  // send cookies\r\n-        });\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-\r\n-  function getCookie(name: string): string | null {\r\n-  const cookies = document.cookie.split('; ');\r\n-  for (const cookie of cookies) {\r\n-    const [key, value] = cookie.split('=');\r\n-    if (key === name) return decodeURIComponent(value);\r\n-  }\r\n-  return null;\r\n-}\r\n-\r\n-async function addToCart(productId: number) {\r\n-  const csrftoken = getCookie('csrftoken');\r\n-\r\n-  try {\r\n-    const response = await axios.post(\r\n-      'http://localhost:8000/api/cart/add/',\r\n-      {\r\n-        product_id: productId,\r\n-        quantity: 1,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'X-CSRFToken': csrftoken ?? '',\r\n-        },\r\n-        withCredentials: true, // send cookies including sessionid\r\n-      }\r\n-    );\r\n-    console.log('Added to cart:', response.data);\r\n-    alert('Added to cart successfully!');\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart.');\r\n-  }\r\n-}\r\n-\r\n-  \r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-// Helper function to get cookie value\r\n-function getCookie(name: string): string | null {\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie.split('; ');\r\n-    for (const cookie of cookies) {\r\n-      const [key, value] = cookie.split('=');\r\n-      if (key === name) {\r\n-        return decodeURIComponent(value);\r\n-      }\r\n-    }\r\n-  }\r\n-  return null;\r\n-}\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const accessToken = getCookie('access_token'); // Check access token in cookie\r\n-\r\n-    if (!accessToken) {\r\n-      console.warn('Access token missing in cookies.');\r\n-      setLoading(false); // Stop loading if unauthorized\r\n-      return;\r\n-    }\r\n-\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,\r\n-        });\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-  const addToCart = async (productId: number) => {\r\n-    const csrftoken = getCookie('csrftoken');\r\n-\r\n-    try {\r\n-      const response = await axios.post(\r\n-        'http://localhost:8000/api/cart/add/',\r\n-        {\r\n-          product_id: productId,\r\n-          quantity: 1,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'X-CSRFToken': csrftoken ?? '',\r\n-          },\r\n-          withCredentials: true,\r\n-        }\r\n-      );\r\n-      console.log('Added to cart:', response.data);\r\n-      alert('Added to cart successfully!');\r\n-    } catch (error) {\r\n-      console.error('Failed to add to cart:', error);\r\n-      alert('Failed to add to cart.');\r\n-    }\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (!products.length) {\r\n-    return (\r\n-      <div className=\"p-6 text-center text-gray-600\">\r\n-        {getCookie('access_token')\r\n-          ? 'No products available.'\r\n-          : 'Please log in to view products.'}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)}\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-// Helper function to get cookie value\r\n-function getCookie(name: string): string | null {\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie.split('; ');\r\n-    for (const cookie of cookies) {\r\n-      const [key, value] = cookie.split('=');\r\n-      if (key === name) {\r\n-        return decodeURIComponent(value);\r\n-      }\r\n-    }\r\n-  }\r\n-  return null;\r\n-}\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const accessToken = getCookie('access_token'); // Check access token in cookie\r\n-\r\n-    if (!accessToken) {\r\n-      console.warn('Access token missing in cookies.');\r\n-      setLoading(false); // Stop loading if unauthorized\r\n-      return;\r\n-    }\r\n-\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,\r\n-        });\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-  const addToCart = async (productId: number) => {\r\n-    const csrftoken = getCookie('csrftoken');\r\n-\r\n-    try {\r\n-      const response = await axios.post(\r\n-        'http://localhost:8000/api/cart/add/',\r\n-        {\r\n-          product_id: productId,\r\n-          quantity: 1,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'X-CSRFToken': csrftoken ?? '',\r\n-          },\r\n-          withCredentials: true,\r\n-        }\r\n-      );\r\n-      console.log('Added to cart:', response.data);\r\n-      alert('Added to cart successfully!');\r\n-    } catch (error) {\r\n-      console.error('Failed to add to cart:', error);\r\n-      alert('Failed to add to cart.');\r\n-    }\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (!products.length) {\r\n-    return (\r\n-      <div className=\"p-6 text-center text-gray-600\">\r\n-        {getCookie('access_token')\r\n-          ? 'No products available.'\r\n-          : 'Please log in to view products.'}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)}\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-// Helper function to get CSRF token from cookies\r\n-function getCookie(name: string) {\r\n-  let cookieValue = null;\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n-    for (let i = 0; i < cookies.length; i++) {\r\n-      const cookie = cookies[i].trim();\r\n-      // Does this cookie string begin with the name we want?\r\n-      if (cookie.startsWith(name + '=')) {\r\n-        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n-        break;\r\n-      }\r\n-    }\r\n-  }\r\n-  return cookieValue;\r\n-}\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,  // send cookies\r\n-        });\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-\r\n-  function getCookie(name: string): string | null {\r\n-  const cookies = document.cookie.split('; ');\r\n-  for (const cookie of cookies) {\r\n-    const [key, value] = cookie.split('=');\r\n-    if (key === name) return decodeURIComponent(value);\r\n-  }\r\n-  return null;\r\n-}\r\n-\r\n-async function addToCart(productId: number) {\r\n-  const csrftoken = getCookie('csrftoken');\r\n-\r\n-  try {\r\n-    const response = await axios.post(\r\n-      'http://localhost:8000/api/cart/add/',\r\n-      {\r\n-        product_id: productId,\r\n-        quantity: 1,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'X-CSRFToken': csrftoken ?? '',\r\n-        },\r\n-        withCredentials: true, // send cookies including sessionid\r\n-      }\r\n-    );\r\n-    console.log('Added to cart:', response.data);\r\n-    alert('Added to cart successfully!');\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart.');\r\n-  }\r\n-}\r\n-\r\n-  \r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-// Helper function to get CSRF token from cookies\r\n-function getCookie(name: string) {\r\n-  let cookieValue = null;\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n-    for (let i = 0; i < cookies.length; i++) {\r\n-      const cookie = cookies[i].trim();\r\n-      // Does this cookie string begin with the name we want?\r\n-      if (cookie.startsWith(name + '=')) {\r\n-        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n-        break;\r\n-      }\r\n-    }\r\n-  }\r\n-  return cookieValue;\r\n-}\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,  // send cookies\r\n-        });\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-\r\n-  function getCookie(name: string): string | null {\r\n-  const cookies = document.cookie.split('; ');\r\n-  for (const cookie of cookies) {\r\n-    const [key, value] = cookie.split('=');\r\n-    if (key === name) return decodeURIComponent(value);\r\n-  }\r\n-  return null;\r\n-}\r\n-\r\n-async function addToCart(productId: number) {\r\n-  const csrftoken = getCookie('csrftoken');\r\n-\r\n-  try {\r\n-    const response = await axios.post(\r\n-      'http://localhost:8000/api/cart/add/',\r\n-      {\r\n-        product_id: productId,\r\n-        quantity: 1,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'X-CSRFToken': csrftoken ?? '',\r\n-        },\r\n-        withCredentials: true, // send cookies including sessionid\r\n-      }\r\n-    );\r\n-    console.log('Added to cart:', response.data);\r\n-    alert('Added to cart successfully!');\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart.');\r\n-  }\r\n-}\r\n-\r\n-  \r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-// Helper function to get CSRF token from cookies\r\n-function getCookie(name: string) {\r\n-  let cookieValue = null;\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n-    for (let i = 0; i < cookies.length; i++) {\r\n-      const cookie = cookies[i].trim();\r\n-      // Does this cookie string begin with the name we want?\r\n-      if (cookie.startsWith(name + '=')) {\r\n-        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n-        break;\r\n-      }\r\n-    }\r\n-  }\r\n-  return cookieValue;\r\n-}\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,  // send cookies\r\n-        });\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-\r\n-  function getCookie(name: string): string | null {\r\n-  const cookies = document.cookie.split('; ');\r\n-  for (const cookie of cookies) {\r\n-    const [key, value] = cookie.split('=');\r\n-    if (key === name) return decodeURIComponent(value);\r\n-  }\r\n-  return null;\r\n-}\r\n-\r\n-async function addToCart(productId: number) {\r\n-  const csrftoken = getCookie('csrftoken');\r\n-\r\n-  try {\r\n-    const response = await axios.post(\r\n-      'http://localhost:8000/api/cart/add/',\r\n-      {\r\n-        product_id: productId,\r\n-        quantity: 1,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'X-CSRFToken': csrftoken ?? '',\r\n-        },\r\n-        withCredentials: true, // send cookies including sessionid\r\n-      }\r\n-    );\r\n-    console.log('Added to cart:', response.data);\r\n-    alert('Added to cart successfully!');\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart.');\r\n-  }\r\n-}\r\n-\r\n-  \r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import axios from 'axios';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-// Helper function to get CSRF token from cookies\r\n-function getCookie(name: string) {\r\n-  let cookieValue = null;\r\n-  if (typeof document !== 'undefined') {\r\n-    const cookies = document.cookie ? document.cookie.split(';') : [];\r\n-    for (let i = 0; i < cookies.length; i++) {\r\n-      const cookie = cookies[i].trim();\r\n-      if (cookie.startsWith(name + '=')) {\r\n-        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n-        break;\r\n-      }\r\n-    }\r\n-  }\r\n-  return cookieValue;\r\n-}\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axios.get<Product[]>('http://localhost:8000/api/products/', {\r\n-          withCredentials: true,  // send cookies (sessionid or JWT cookie)\r\n-        });\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-  // You already defined this helper twice, remove duplicate if you want, \r\n-  // but I'll keep as you wrote\r\n-\r\n-  function getCookie(name: string): string | null {\r\n-    const cookies = document.cookie.split('; ');\r\n-    for (const cookie of cookies) {\r\n-      const [key, value] = cookie.split('=');\r\n-      if (key === name) return decodeURIComponent(value);\r\n-    }\r\n-    return null;\r\n-  }\r\n-\r\n-  async function addToCart(productId: number) {\r\n-    const csrftoken = getCookie('csrftoken');\r\n-\r\n-    try {\r\n-      const response = await axios.post(\r\n-        'http://localhost:8000/api/cart/add/',\r\n-        {\r\n-          product_id: productId,\r\n-          quantity: 1,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'X-CSRFToken': csrftoken ?? '',\r\n-          },\r\n-          withCredentials: true, // send cookies including sessionid\r\n-        }\r\n-      );\r\n-      console.log('Added to cart:', response.data);\r\n-      alert('Added to cart successfully!');\r\n-    } catch (error) {\r\n-      console.error('Failed to add to cart:', error);\r\n-      alert('Failed to add to cart.');\r\n-    }\r\n-  }\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)} // Pass product ID here\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1749068470895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,21 +33,30 @@\n     fetchProducts();\r\n   }, []);\r\n \r\n   const addToCart = async (productId: number) => {\r\n-    try {\r\n-      const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n-        product_id: productId,\r\n-        quantity: 1,\r\n-      });\r\n-      console.log('Added to cart:', response.data);\r\n-      alert('Added to cart successfully!');\r\n-    } catch (error) {\r\n-      console.error('Failed to add to cart:', error);\r\n-      alert('Failed to add to cart.');\r\n+  try {\r\n+    const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n+      product_id: productId,\r\n+      quantity: 1,\r\n+    });\r\n+\r\n+    const data = response.data;\r\n+\r\n+    if (data.status === 'exists') {\r\n+      alert(`\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`);\r\n+    } else if (data.status === 'success') {\r\n+      alert(`\"${data.product}\" added to cart successfully!`);\r\n+    } else {\r\n+      alert('Unexpected response from server.');\r\n     }\r\n-  };\r\n \r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart. Please try again.');\r\n+  }\r\n+};\r\n+\r\n   if (loading) {\r\n     return (\r\n       <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n         {[1, 2, 3].map((i) => (\r\n"
                },
                {
                    "date": 1749068476742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { axiosWithCsrf } from '@/lib/axiosWithCsrf';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axiosWithCsrf.get<Product[]>('/api/products/');\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+  const addToCart = async (productId: number) => {\r\n+  try {\r\n+    const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n+      product_id: productId,\r\n+      quantity: 1,\r\n+    });\r\n+\r\n+    const data = response.data;\r\n+\r\n+    if (data.status === 'exists') {\r\n+      alert(`\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`);\r\n+    } else if (data.status === 'success') {\r\n+      alert(`\"${data.product}\" added to cart successfully!`);\r\n+    } else {\r\n+      alert('Unexpected response from server.');\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart. Please try again.');\r\n+  }\r\n+};\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!products.length) {\r\n+    return (\r\n+      <div className=\"p-6 text-center text-gray-600\">\r\n+        No products available.\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)}\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749068494671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { axiosWithCsrf } from '@/lib/axiosWithCsrf';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axiosWithCsrf.get<Product[]>('/api/products/');\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+  const addToCart = async (productId: number) => {\r\n+  try {\r\n+    const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n+      product_id: productId,\r\n+      quantity: 1,\r\n+    });\r\n+\r\n+    const data = response.data;\r\n+\r\n+    if (data.status === 'exists') {\r\n+      alert(`\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`);\r\n+    } else if (data.status === 'success') {\r\n+      alert(`\"${data.product}\" added to cart successfully!`);\r\n+    } else {\r\n+      alert('Unexpected response from server.');\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart. Please try again.');\r\n+  }\r\n+};\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!products.length) {\r\n+    return (\r\n+      <div className=\"p-6 text-center text-gray-600\">\r\n+        No products available.\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)}\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749068619302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import { axiosWithCsrf } from '@/lib/axiosWithCsrf';\r\n+import { FoodCard } from '@/components/FoodCard';\r\n+import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n+import PopupMessage from '@/components/PopupMessage';\r\n+\r\n+type Product = {\r\n+  id: number;\r\n+  name: string;\r\n+  desc: string;\r\n+  image: string;\r\n+  price: string;\r\n+  category: number;\r\n+};\r\n+\r\n+export default function Menu() {\r\n+  const [products, setProducts] = useState<Product[]>([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const res = await axiosWithCsrf.get<Product[]>('/api/products/');\r\n+        setProducts(res.data);\r\n+      } catch (err) {\r\n+        console.error('Failed to fetch products:', err);\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchProducts();\r\n+  }, []);\r\n+\r\n+  const addToCart = async (productId: number) => {\r\n+  try {\r\n+    const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n+      product_id: productId,\r\n+      quantity: 1,\r\n+    });\r\n+\r\n+    const data = response.data;\r\n+\r\n+    if (data.status === 'exists') {\r\n+      alert(`\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`);\r\n+    } else if (data.status === 'success') {\r\n+      alert(`\"${data.product}\" added to cart successfully!`);\r\n+    } else {\r\n+      alert('Unexpected response from server.');\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.error('Failed to add to cart:', error);\r\n+    alert('Failed to add to cart. Please try again.');\r\n+  }\r\n+};\r\n+\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+        {[1, 2, 3].map((i) => (\r\n+          <FoodCardSkeleton key={i} />\r\n+        ))}\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  if (!products.length) {\r\n+    return (\r\n+      <div className=\"p-6 text-center text-gray-600\">\r\n+        No products available.\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      {products.map((product) => (\r\n+        <FoodCard\r\n+          key={product.id}\r\n+          imageSrc={product.image}\r\n+          name={product.name}\r\n+          description={product.desc}\r\n+          price={parseFloat(product.price)}\r\n+          onAddToCart={() => addToCart(product.id)}\r\n+        />\r\n+      ))}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749068705967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,12 @@\n \r\n export default function Menu() {\r\n   const [products, setProducts] = useState<Product[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [popup, setPopup] = useState<{\r\n+    message: string;\r\n+    type: 'success' | 'error' | 'info';\r\n+  } | null>(null);\r\n \r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n@@ -34,121 +38,41 @@\n     fetchProducts();\r\n   }, []);\r\n \r\n   const addToCart = async (productId: number) => {\r\n-  try {\r\n-    const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n-      product_id: productId,\r\n-      quantity: 1,\r\n-    });\r\n+    try {\r\n+      const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n+        product_id: productId,\r\n+        quantity: 1,\r\n+      });\r\n \r\n-    const data = response.data;\r\n+      const data = response.data;\r\n \r\n-    if (data.status === 'exists') {\r\n-      alert(`\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`);\r\n-    } else if (data.status === 'success') {\r\n-      alert(`\"${data.product}\" added to cart successfully!`);\r\n-    } else {\r\n-      alert('Unexpected response from server.');\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart. Please try again.');\r\n-  }\r\n-};\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (!products.length) {\r\n-    return (\r\n-      <div className=\"p-6 text-center text-gray-600\">\r\n-        No products available.\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)}\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { axiosWithCsrf } from '@/lib/axiosWithCsrf';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axiosWithCsrf.get<Product[]>('/api/products/');\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n+      if (data.status === 'exists') {\r\n+        setPopup({\r\n+          message: `\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`,\r\n+          type: 'info',\r\n+        });\r\n+      } else if (data.status === 'success') {\r\n+        setPopup({\r\n+          message: `\"${data.product}\" added to cart successfully!`,\r\n+          type: 'success',\r\n+        });\r\n+      } else {\r\n+        setPopup({\r\n+          message: 'Unexpected response from server.',\r\n+          type: 'error',\r\n+        });\r\n       }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-  const addToCart = async (productId: number) => {\r\n-  try {\r\n-    const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n-      product_id: productId,\r\n-      quantity: 1,\r\n-    });\r\n-\r\n-    const data = response.data;\r\n-\r\n-    if (data.status === 'exists') {\r\n-      alert(`\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`);\r\n-    } else if (data.status === 'success') {\r\n-      alert(`\"${data.product}\" added to cart successfully!`);\r\n-    } else {\r\n-      alert('Unexpected response from server.');\r\n+    } catch (error) {\r\n+      console.error('Failed to add to cart:', error);\r\n+      setPopup({\r\n+        message: 'Failed to add to cart. Please try again.',\r\n+        type: 'error',\r\n+      });\r\n     }\r\n+  };\r\n \r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart. Please try again.');\r\n-  }\r\n-};\r\n-\r\n   if (loading) {\r\n     return (\r\n       <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n         {[1, 2, 3].map((i) => (\r\n@@ -166,200 +90,28 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)}\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { axiosWithCsrf } from '@/lib/axiosWithCsrf';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axiosWithCsrf.get<Product[]>('/api/products/');\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-  const addToCart = async (productId: number) => {\r\n-  try {\r\n-    const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n-      product_id: productId,\r\n-      quantity: 1,\r\n-    });\r\n-\r\n-    const data = response.data;\r\n-\r\n-    if (data.status === 'exists') {\r\n-      alert(`\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`);\r\n-    } else if (data.status === 'success') {\r\n-      alert(`\"${data.product}\" added to cart successfully!`);\r\n-    } else {\r\n-      alert('Unexpected response from server.');\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart. Please try again.');\r\n-  }\r\n-};\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n+    <>\r\n+      <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+        {products.map((product) => (\r\n+          <FoodCard\r\n+            key={product.id}\r\n+            imageSrc={product.image}\r\n+            name={product.name}\r\n+            description={product.desc}\r\n+            price={parseFloat(product.price)}\r\n+            onAddToCart={() => addToCart(product.id)}\r\n+          />\r\n         ))}\r\n       </div>\r\n-    );\r\n-  }\r\n \r\n-  if (!products.length) {\r\n-    return (\r\n-      <div className=\"p-6 text-center text-gray-600\">\r\n-        No products available.\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)}\r\n+      {popup && (\r\n+        <PopupMessage\r\n+          message={popup.message}\r\n+          type={popup.type}\r\n+          onClose={() => setPopup(null)}\r\n         />\r\n-      ))}\r\n-    </div>\r\n+      )}\r\n+    </>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import { axiosWithCsrf } from '@/lib/axiosWithCsrf';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-\r\n-type Product = {\r\n-  id: number;\r\n-  name: string;\r\n-  desc: string;\r\n-  image: string;\r\n-  price: string;\r\n-  category: number;\r\n-};\r\n-\r\n-export default function Menu() {\r\n-  const [products, setProducts] = useState<Product[]>([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const res = await axiosWithCsrf.get<Product[]>('/api/products/');\r\n-        setProducts(res.data);\r\n-      } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n-      } finally {\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-  const addToCart = async (productId: number) => {\r\n-  try {\r\n-    const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n-      product_id: productId,\r\n-      quantity: 1,\r\n-    });\r\n-\r\n-    const data = response.data;\r\n-\r\n-    if (data.status === 'exists') {\r\n-      alert(`\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`);\r\n-    } else if (data.status === 'success') {\r\n-      alert(`\"${data.product}\" added to cart successfully!`);\r\n-    } else {\r\n-      alert('Unexpected response from server.');\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.error('Failed to add to cart:', error);\r\n-    alert('Failed to add to cart. Please try again.');\r\n-  }\r\n-};\r\n-\r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n-        {[1, 2, 3].map((i) => (\r\n-          <FoodCardSkeleton key={i} />\r\n-        ))}\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  if (!products.length) {\r\n-    return (\r\n-      <div className=\"p-6 text-center text-gray-600\">\r\n-        No products available.\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n-      {products.map((product) => (\r\n-        <FoodCard\r\n-          key={product.id}\r\n-          imageSrc={product.image}\r\n-          name={product.name}\r\n-          description={product.desc}\r\n-          price={parseFloat(product.price)}\r\n-          onAddToCart={() => addToCart(product.id)}\r\n-        />\r\n-      ))}\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1749073650087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n-'use client';\r\n+\"use client\";\r\n \r\n-import { useEffect, useState } from 'react';\r\n-import { axiosWithCsrf } from '@/lib/axiosWithCsrf';\r\n-import { FoodCard } from '@/components/FoodCard';\r\n-import { FoodCardSkeleton } from '@/components/FoodCardSkeleton';\r\n-import PopupMessage from '@/components/PopupMessage';\r\n+import { useEffect, useState } from \"react\";\r\n+import { axiosWithCsrf } from \"@/lib/axiosWithCsrf\";\r\n+import { FoodCard } from \"@/components/FoodCard\";\r\n+import { FoodCardSkeleton } from \"@/components/FoodCardSkeleton\";\r\n+import PopupMessage from \"@/components/PopupMessage\";\r\n \r\n type Product = {\r\n   id: number;\r\n   name: string;\r\n@@ -19,18 +19,18 @@\n   const [products, setProducts] = useState<Product[]>([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [popup, setPopup] = useState<{\r\n     message: string;\r\n-    type: 'success' | 'error' | 'info';\r\n+    type: \"success\" | \"error\" | \"info\";\r\n   } | null>(null);\r\n \r\n   useEffect(() => {\r\n     const fetchProducts = async () => {\r\n       try {\r\n-        const res = await axiosWithCsrf.get<Product[]>('/api/products/');\r\n+        const res = await axiosWithCsrf.get<Product[]>(\"/api/products/\");\r\n         setProducts(res.data);\r\n       } catch (err) {\r\n-        console.error('Failed to fetch products:', err);\r\n+        console.error(\"Failed to fetch products:\", err);\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n@@ -39,36 +39,36 @@\n   }, []);\r\n \r\n   const addToCart = async (productId: number) => {\r\n     try {\r\n-      const response = await axiosWithCsrf.post('/api/cart/add/', {\r\n+      const response = await axiosWithCsrf.post(\"/api/cart/add/\", {\r\n         product_id: productId,\r\n         quantity: 1,\r\n       });\r\n \r\n       const data = response.data;\r\n \r\n-      if (data.status === 'exists') {\r\n+      if (data.status === \"exists\") {\r\n         setPopup({\r\n           message: `\"${data.product}\" is already in your cart (Qty: ${data.quantity}).`,\r\n-          type: 'info',\r\n+          type: \"info\",\r\n         });\r\n-      } else if (data.status === 'success') {\r\n+      } else if (data.status === \"success\") {\r\n         setPopup({\r\n           message: `\"${data.product}\" added to cart successfully!`,\r\n-          type: 'success',\r\n+          type: \"success\",\r\n         });\r\n       } else {\r\n         setPopup({\r\n-          message: 'Unexpected response from server.',\r\n-          type: 'error',\r\n+          message: \"Unexpected response from server.\",\r\n+          type: \"error\",\r\n         });\r\n       }\r\n     } catch (error) {\r\n-      console.error('Failed to add to cart:', error);\r\n+      console.error(\"Failed to add to cart:\", error);\r\n       setPopup({\r\n-        message: 'Failed to add to cart. Please try again.',\r\n-        type: 'error',\r\n+        message: \"Failed to add to cart. Please try again.\",\r\n+        type: \"error\",\r\n       });\r\n     }\r\n   };\r\n \r\n"
                },
                {
                    "date": 1749119580855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n   }\r\n \r\n   return (\r\n     <>\r\n-      <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      <div className=\"p-2 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n         {products.map((product) => (\r\n           <FoodCard\r\n             key={product.id}\r\n             imageSrc={product.image}\r\n"
                },
                {
                    "date": 1749119588317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n   }\r\n \r\n   return (\r\n     <>\r\n-      <div className=\"p-2 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n         {products.map((product) => (\r\n           <FoodCard\r\n             key={product.id}\r\n             imageSrc={product.image}\r\n"
                },
                {
                    "date": 1749119595146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n   }\r\n \r\n   return (\r\n     <>\r\n-      <div className=\"p-3 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n+      <div className=\"p-2 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-3 gap-6 pt-5\">\r\n         {products.map((product) => (\r\n           <FoodCard\r\n             key={product.id}\r\n             imageSrc={product.image}\r\n"
                }
            ],
            "date": 1748772323399,
            "name": "Commit-0",
            "content": "import { FoodCard } from '@/components/FoodCard';\r\n\r\nexport default function Menu() {\r\n  const handleAddToCart = (foodName: string) => {\r\n    console.log(`${foodName} added to cart`);\r\n    // TODO: Implement cart logic\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n      <FoodCard\r\n        imageSrc=\"/images/pizza.jpg\"\r\n        name=\"Margherita Pizza\"\r\n        description=\"Classic pizza with tomato, mozzarella, and basil.\"\r\n        price={299}\r\n        onAddToCart={() => handleAddToCart('Margherita Pizza')}\r\n      />\r\n      <FoodCard\r\n        imageSrc=\"/images/burger.jpg\"\r\n        name=\"Cheeseburger\"\r\n        description=\"Juicy burger with cheese, lettuce, and tomato.\"\r\n        price={199}\r\n        onAddToCart={() => handleAddToCart('Cheeseburger')}\r\n      />\r\n      <FoodCard\r\n        imageSrc=\"/images/pasta.jpg\"\r\n        name=\"Penne Alfredo\"\r\n        description=\"Creamy Alfredo pasta with mushrooms.\"\r\n        price={249}\r\n        onAddToCart={() => handleAddToCart('Penne Alfredo')}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}
{
    "sourceFile": "app/login/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1748771745252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748771801575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function LoginPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+\r\n+  const handleLogin = (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    console.log('Login with', { email, password });\r\n+    // TODO: Add auth logic here\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n+\r\n+        {/* Google Login */}\r\n+        <Button\r\n+          onClick={handleGoogleLogin}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or login with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Email Login */}\r\n+        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Login\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Don't have an account?{' '}\r\n+          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n+            Sign up here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748955480235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,13 +9,38 @@\n export default function LoginPage() {\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n \r\n-  const handleLogin = (e: React.FormEvent) => {\r\n+  const handleLogin = async (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n-    console.log('Login with', { email, password });\r\n-    // TODO: Add auth logic here\r\n+    setError('');\r\n+\r\n+    try {\r\n+      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await res.json();\r\n+\r\n+      if (res.ok) {\r\n+        console.log('Login successful:', data);\r\n+        localStorage.setItem('token', data.access); // save JWT access token\r\n+        window.location.href = '/'; // redirect to home or dashboard\r\n+      } else {\r\n+        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n+        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n+      }\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError('Something went wrong during login.');\r\n+    }\r\n   };\r\n \r\n   const handleGoogleLogin = () => {\r\n     console.log('Google login clicked');\r\n@@ -84,101 +109,11 @@\n               {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n             </button>\r\n           </div>\r\n \r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Login\r\n-          </Button>\r\n-        </form>\r\n+          {/* Show error message */}\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n \r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Don't have an account?{' '}\r\n-          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n-            Sign up here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-// app/login/page.tsx\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function LoginPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-\r\n-  const handleLogin = (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    console.log('Login with', { email, password });\r\n-    // Firebase or backend auth logic here\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Logging in with Google...');\r\n-    // Firebase or OAuth login logic\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n-\r\n-        {/* Google Login */}\r\n-        <Button\r\n-          onClick={handleGoogleLogin}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or login with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Email Login */}\r\n-        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type=\"password\"\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n           <Button type=\"submit\" className=\"w-full\">\r\n             Login\r\n           </Button>\r\n         </form>\r\n"
                },
                {
                    "date": 1749018115789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n 'use client';\r\n \r\n import { useState } from 'react';\r\n+import axios from 'axios';\r\n import Link from 'next/link';\r\n import { FcGoogle } from 'react-icons/fc';\r\n import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n import { Button } from '@/components/ui/button';\r\n@@ -16,30 +17,32 @@\n     e.preventDefault();\r\n     setError('');\r\n \r\n     try {\r\n-      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/api/auth/login/',\r\n+        {\r\n           email: email.trim(),\r\n           password: password,\r\n-        }),\r\n-      });\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+          },\r\n+          withCredentials: true, // ✅ required for HttpOnly cookie\r\n+        }\r\n+      );\r\n \r\n-      const data = await res.json();\r\n-\r\n-      if (res.ok) {\r\n-        console.log('Login successful:', data);\r\n-        localStorage.setItem('token', data.access); // save JWT access token\r\n-        window.location.href = '/'; // redirect to home or dashboard\r\n+      console.log('Login successful:', res.data);\r\n+      // No need to store token in localStorage anymore\r\n+      window.location.href = '/'; // redirect to homepage or dashboard\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+      if (err.response?.data?.non_field_errors) {\r\n+        setError(err.response.data.non_field_errors.join(' '));\r\n       } else {\r\n-        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n-        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n+        setError('Login failed. Please check your credentials.');\r\n       }\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      setError('Something went wrong during login.');\r\n     }\r\n   };\r\n \r\n   const handleGoogleLogin = () => {\r\n"
                },
                {
                    "date": 1749021148032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function LoginPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    try {\r\n+      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await res.json();\r\n+\r\n+      if (res.ok) {\r\n+        console.log('Login successful:', data);\r\n+        localStorage.setItem('token', data.access); // save JWT access token\r\n+        window.location.href = '/'; // redirect to home or dashboard\r\n+      } else {\r\n+        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n+        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n+      }\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError('Something went wrong during login.');\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n+\r\n+        {/* Google Login */}\r\n+        <Button\r\n+          onClick={handleGoogleLogin}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or login with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Email Login */}\r\n+        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Show error message */}\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Login\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Don't have an account?{' '}\r\n+          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n+            Sign up here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749021169882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function LoginPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    try {\r\n+      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await res.json();\r\n+\r\n+      if (res.ok) {\r\n+        console.log('Login successful:', data);\r\n+        localStorage.setItem('token', data.access); // save JWT access token\r\n+        window.location.href = '/'; // redirect to home or dashboard\r\n+      } else {\r\n+        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n+        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n+      }\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError('Something went wrong during login.');\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n+\r\n+        {/* Google Login */}\r\n+        <Button\r\n+          onClick={handleGoogleLogin}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or login with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Email Login */}\r\n+        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Show error message */}\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Login\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Don't have an account?{' '}\r\n+          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n+            Sign up here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749021175210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function LoginPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    try {\r\n+      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await res.json();\r\n+\r\n+      if (res.ok) {\r\n+        console.log('Login successful:', data);\r\n+        localStorage.setItem('token', data.access); // save JWT access token\r\n+        window.location.href = '/'; // redirect to home or dashboard\r\n+      } else {\r\n+        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n+        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n+      }\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError('Something went wrong during login.');\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n+\r\n+        {/* Google Login */}\r\n+        <Button\r\n+          onClick={handleGoogleLogin}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or login with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Email Login */}\r\n+        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Show error message */}\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Login\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Don't have an account?{' '}\r\n+          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n+            Sign up here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749021183819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function LoginPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    try {\r\n+      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await res.json();\r\n+\r\n+      if (res.ok) {\r\n+        console.log('Login successful:', data);\r\n+        localStorage.setItem('token', data.access); // save JWT access token\r\n+        window.location.href = '/'; // redirect to home or dashboard\r\n+      } else {\r\n+        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n+        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n+      }\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError('Something went wrong during login.');\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n+\r\n+        {/* Google Login */}\r\n+        <Button\r\n+          onClick={handleGoogleLogin}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or login with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Email Login */}\r\n+        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Show error message */}\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Login\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Don't have an account?{' '}\r\n+          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n+            Sign up here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749040321876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // store cookies from backend\r\n+\r\n+export default function LoginPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Function to get cookie value (for csrf token)\r\n+  const getCookie = (name: string) => {\r\n+    const cookieArr = document.cookie.split(';');\r\n+    for (let cookie of cookieArr) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/api/auth/login/',\r\n+        {\r\n+          email: email.trim(),\r\n+          password,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Login successful:', res.data);\r\n+      // Access token is already stored in HttpOnly cookie by backend\r\n+      window.location.href = '/'; // Redirect after login\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+      if (err.response?.data?.non_field_errors) {\r\n+        setError(err.response.data.non_field_errors.join(' '));\r\n+      } else {\r\n+        setError('Login failed. Please check your credentials.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n+\r\n+        {/* Google Login */}\r\n+        <Button\r\n+          onClick={handleGoogleLogin}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or login with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Email Login */}\r\n+        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Login\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Don't have an account?{' '}\r\n+          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n+            Sign up here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749040399013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     try {\r\n       const csrfToken = getCookie('csrftoken');\r\n \r\n       const res = await axios.post(\r\n-        'http://localhost:8000/api/auth/login/',\r\n+        'http://localhost:8000/auth/login/',\r\n         {\r\n           email: email.trim(),\r\n           password,\r\n         },\r\n@@ -143,657 +143,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function LoginPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    try {\r\n-      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await res.json();\r\n-\r\n-      if (res.ok) {\r\n-        console.log('Login successful:', data);\r\n-        localStorage.setItem('token', data.access); // save JWT access token\r\n-        window.location.href = '/'; // redirect to home or dashboard\r\n-      } else {\r\n-        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n-        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n-      }\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      setError('Something went wrong during login.');\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Google login clicked');\r\n-    // TODO: Add Google OAuth here\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n-\r\n-        {/* Google Login */}\r\n-        <Button\r\n-          onClick={handleGoogleLogin}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or login with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Email Login */}\r\n-        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Show error message */}\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Login\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Don't have an account?{' '}\r\n-          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n-            Sign up here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function LoginPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    try {\r\n-      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await res.json();\r\n-\r\n-      if (res.ok) {\r\n-        console.log('Login successful:', data);\r\n-        localStorage.setItem('token', data.access); // save JWT access token\r\n-        window.location.href = '/'; // redirect to home or dashboard\r\n-      } else {\r\n-        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n-        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n-      }\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      setError('Something went wrong during login.');\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Google login clicked');\r\n-    // TODO: Add Google OAuth here\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n-\r\n-        {/* Google Login */}\r\n-        <Button\r\n-          onClick={handleGoogleLogin}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or login with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Email Login */}\r\n-        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Show error message */}\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Login\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Don't have an account?{' '}\r\n-          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n-            Sign up here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function LoginPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    try {\r\n-      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await res.json();\r\n-\r\n-      if (res.ok) {\r\n-        console.log('Login successful:', data);\r\n-        localStorage.setItem('token', data.access); // save JWT access token\r\n-        window.location.href = '/'; // redirect to home or dashboard\r\n-      } else {\r\n-        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n-        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n-      }\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      setError('Something went wrong during login.');\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Google login clicked');\r\n-    // TODO: Add Google OAuth here\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n-\r\n-        {/* Google Login */}\r\n-        <Button\r\n-          onClick={handleGoogleLogin}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or login with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Email Login */}\r\n-        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Show error message */}\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Login\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Don't have an account?{' '}\r\n-          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n-            Sign up here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function LoginPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    try {\r\n-      const res = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await res.json();\r\n-\r\n-      if (res.ok) {\r\n-        console.log('Login successful:', data);\r\n-        localStorage.setItem('token', data.access); // save JWT access token\r\n-        window.location.href = '/'; // redirect to home or dashboard\r\n-      } else {\r\n-        // show error from backend (e.g. \"Unable to log in with provided credentials.\")\r\n-        setError(data.non_field_errors ? data.non_field_errors.join(' ') : 'Login failed');\r\n-      }\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      setError('Something went wrong during login.');\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Google login clicked');\r\n-    // TODO: Add Google OAuth here\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n-\r\n-        {/* Google Login */}\r\n-        <Button\r\n-          onClick={handleGoogleLogin}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or login with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Email Login */}\r\n-        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Show error message */}\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Login\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Don't have an account?{' '}\r\n-          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n-            Sign up here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import axios from 'axios';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function LoginPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    try {\r\n-      const res = await axios.post(\r\n-        'http://localhost:8000/api/auth/login/',\r\n-        {\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-          },\r\n-          withCredentials: true, // ✅ required for HttpOnly cookie\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Login successful:', res.data);\r\n-      // No need to store token in localStorage anymore\r\n-      window.location.href = '/'; // redirect to homepage or dashboard\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-      if (err.response?.data?.non_field_errors) {\r\n-        setError(err.response.data.non_field_errors.join(' '));\r\n-      } else {\r\n-        setError('Login failed. Please check your credentials.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Google login clicked');\r\n-    // TODO: Add Google OAuth here\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n-\r\n-        {/* Google Login */}\r\n-        <Button\r\n-          onClick={handleGoogleLogin}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or login with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Email Login */}\r\n-        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Show error message */}\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Login\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Don't have an account?{' '}\r\n-          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n-            Sign up here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1749040453355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // store cookies from backend\r\n+\r\n+export default function LoginPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Function to get cookie value (for csrf token)\r\n+  const getCookie = (name: string) => {\r\n+    const cookieArr = document.cookie.split(';');\r\n+    for (let cookie of cookieArr) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/auth/login/',\r\n+        {\r\n+          email: email.trim(),\r\n+          password,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Login successful:', res.data);\r\n+      // Access token is already stored in HttpOnly cookie by backend\r\n+      window.location.href = '/'; // Redirect after login\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+      if (err.response?.data?.non_field_errors) {\r\n+        setError(err.response.data.non_field_errors.join(' '));\r\n+      } else {\r\n+        setError('Login failed. Please check your credentials.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n+\r\n+        {/* Google Login */}\r\n+        <Button\r\n+          onClick={handleGoogleLogin}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or login with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Email Login */}\r\n+        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Login\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Don't have an account?{' '}\r\n+          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n+            Sign up here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749064926616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import { axiosWithCsrf } from '@/lib/axiosWithCsrf'; // ✅ use helper\r\n+\r\n+export default function LoginPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleLogin = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    try {\r\n+      const res = await axiosWithCsrf.post('/auth/login/', {\r\n+        email: email.trim(),\r\n+        password,\r\n+      });\r\n+\r\n+      console.log('Login successful:', res.data);\r\n+      window.location.href = '/'; // redirect on success\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+      if (err.response?.data?.non_field_errors) {\r\n+        setError(err.response.data.non_field_errors.join(' '));\r\n+      } else {\r\n+        setError('Login failed. Please check your credentials.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n+\r\n+        {/* Google Login */}\r\n+        <Button\r\n+          onClick={handleGoogleLogin}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or login with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Login\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Don't have an account?{' '}\r\n+          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n+            Sign up here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749064999538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,296 +118,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // store cookies from backend\r\n-\r\n-export default function LoginPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Function to get cookie value (for csrf token)\r\n-  const getCookie = (name: string) => {\r\n-    const cookieArr = document.cookie.split(';');\r\n-    for (let cookie of cookieArr) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      const res = await axios.post(\r\n-        'http://localhost:8000/auth/login/',\r\n-        {\r\n-          email: email.trim(),\r\n-          password,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Login successful:', res.data);\r\n-      // Access token is already stored in HttpOnly cookie by backend\r\n-      window.location.href = '/'; // Redirect after login\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-      if (err.response?.data?.non_field_errors) {\r\n-        setError(err.response.data.non_field_errors.join(' '));\r\n-      } else {\r\n-        setError('Login failed. Please check your credentials.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Google login clicked');\r\n-    // TODO: Add Google OAuth here\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n-\r\n-        {/* Google Login */}\r\n-        <Button\r\n-          onClick={handleGoogleLogin}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or login with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Email Login */}\r\n-        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Login\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Don't have an account?{' '}\r\n-          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n-            Sign up here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // store cookies from backend\r\n-\r\n-export default function LoginPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Function to get cookie value (for csrf token)\r\n-  const getCookie = (name: string) => {\r\n-    const cookieArr = document.cookie.split(';');\r\n-    for (let cookie of cookieArr) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleLogin = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      const res = await axios.post(\r\n-        'http://localhost:8000/auth/login/',\r\n-        {\r\n-          email: email.trim(),\r\n-          password,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Login successful:', res.data);\r\n-      // Access token is already stored in HttpOnly cookie by backend\r\n-      window.location.href = '/'; // Redirect after login\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-      if (err.response?.data?.non_field_errors) {\r\n-        setError(err.response.data.non_field_errors.join(' '));\r\n-      } else {\r\n-        setError('Login failed. Please check your credentials.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Google login clicked');\r\n-    // TODO: Add Google OAuth here\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n-\r\n-        {/* Google Login */}\r\n-        <Button\r\n-          onClick={handleGoogleLogin}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or login with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Email Login */}\r\n-        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Login\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Don't have an account?{' '}\r\n-          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n-            Sign up here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                }
            ],
            "date": 1748771745252,
            "name": "Commit-0",
            "content": "// app/login/page.tsx\r\n'use client';\r\n\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport { Button } from '@/components/ui/button';\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log('Login with', { email, password });\r\n    // Firebase or backend auth logic here\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    console.log('Logging in with Google...');\r\n    // Firebase or OAuth login logic\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center px-4\">\r\n      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Welcome Back</h2>\r\n\r\n        {/* Google Login */}\r\n        <Button\r\n          onClick={handleGoogleLogin}\r\n          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n          variant=\"outline\"\r\n        >\r\n          <FcGoogle size={20} /> Continue with Google\r\n        </Button>\r\n\r\n        <div className=\"relative my-4\">\r\n          <div className=\"absolute inset-0 flex items-center\">\r\n            <div className=\"w-full border-t border-gray-300\" />\r\n          </div>\r\n          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n            or login with email\r\n          </div>\r\n        </div>\r\n\r\n        {/* Email Login */}\r\n        <form onSubmit={handleLogin} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              required\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n              placeholder=\"you@example.com\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n              placeholder=\"••••••••\"\r\n            />\r\n          </div>\r\n\r\n          <Button type=\"submit\" className=\"w-full\">\r\n            Login\r\n          </Button>\r\n        </form>\r\n\r\n        <p className=\"text-center text-sm text-gray-500\">\r\n          Don't have an account?{' '}\r\n          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">\r\n            Sign up here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}
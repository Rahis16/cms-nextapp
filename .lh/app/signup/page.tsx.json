{
    "sourceFile": "app/signup/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 52,
            "patches": [
                {
                    "date": 1748771940703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748951553549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,21 +13,44 @@\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n   const [error, setError] = useState('');\r\n \r\n-  const handleSignup = (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+  e.preventDefault();\r\n+  setError('');\r\n \r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n+  }\r\n+\r\n+  try {\r\n+    const res = await fetch('http://localhost:8000/api/auth/register/', {\r\n+      method: 'POST',\r\n+      headers: {\r\n+        'Content-Type': 'application/json',\r\n+      },\r\n+      body: JSON.stringify({\r\n+        email: email,\r\n+        password: password,\r\n+      }),\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+\r\n+    if (res.ok) {\r\n+      // ✅ Signup successful - maybe redirect or auto-login\r\n+      console.log('Signup successful!', data);\r\n+      window.location.href = '/login'; // Or auto login with returned token\r\n+    } else {\r\n+      setError(data.detail || 'Signup failed!');\r\n     }\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    setError('Something went wrong!');\r\n+  }\r\n+};\r\n \r\n-    console.log('Signup with', { email, password });\r\n-    // TODO: Add signup logic (Firebase/Auth0/backend)\r\n-  };\r\n-\r\n   const handleGoogleSignup = () => {\r\n     console.log('Signup with Google clicked');\r\n     // TODO: Add Google OAuth signup logic\r\n   };\r\n"
                },
                {
                    "date": 1748951735024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,164 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function SignupPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+  e.preventDefault();\r\n+  setError('');\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n+  }\r\n+\r\n+  try {\r\n+    const res = await fetch('http://localhost:8000/api/auth/registeration/', {\r\n+      method: 'POST',\r\n+      headers: {\r\n+        'Content-Type': 'application/json',\r\n+      },\r\n+      body: JSON.stringify({\r\n+        email: email,\r\n+        password: password,\r\n+      }),\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+\r\n+    if (res.ok) {\r\n+      // ✅ Signup successful - maybe redirect or auto-login\r\n+      console.log('Signup successful!', data);\r\n+      window.location.href = '/login'; // Or auto login with returned token\r\n+    } else {\r\n+      setError(data.detail || 'Signup failed!');\r\n+    }\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    setError('Something went wrong!');\r\n+  }\r\n+};\r\n+\r\n+  const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+    // TODO: Add Google OAuth signup logic\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        {/* Google Signup */}\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Signup Form */}\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">\r\n+              {error}\r\n+            </p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748951776455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,172 +23,8 @@\n     return;\r\n   }\r\n \r\n   try {\r\n-    const res = await fetch('http://localhost:8000/api/auth/registeration/', {\r\n-      method: 'POST',\r\n-      headers: {\r\n-        'Content-Type': 'application/json',\r\n-      },\r\n-      body: JSON.stringify({\r\n-        email: email,\r\n-        password: password,\r\n-      }),\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-\r\n-    if (res.ok) {\r\n-      // ✅ Signup successful - maybe redirect or auto-login\r\n-      console.log('Signup successful!', data);\r\n-      window.location.href = '/login'; // Or auto login with returned token\r\n-    } else {\r\n-      setError(data.detail || 'Signup failed!');\r\n-    }\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    setError('Something went wrong!');\r\n-  }\r\n-};\r\n-\r\n-  const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-    // TODO: Add Google OAuth signup logic\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        {/* Google Signup */}\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Signup Form */}\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">\r\n-              {error}\r\n-            </p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function SignupPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n-\r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n-\r\n-  try {\r\n     const res = await fetch('http://localhost:8000/api/auth/register/', {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n"
                },
                {
                    "date": 1748951895499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     return;\r\n   }\r\n \r\n   try {\r\n-    const res = await fetch('http://localhost:8000/api/auth/register/', {\r\n+    const res = await fetch('http://localhost:8000/api/auth/registration/', { ... }, {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n       },\r\n"
                },
                {
                    "date": 1748952157648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function SignupPage() {\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+  method: 'POST',\r\n+  headers: {\r\n+    'Content-Type': 'application/json',\r\n+  },\r\n+  body: JSON.stringify({ email, password1: password, password2: confirmPassword }),\r\n+});\r\n+\r\n+const data = await res.json();\r\n+\r\n+if (!res.ok) {\r\n+  console.error('Signup error:', data);\r\n+  setError(data.email ? data.email[0] : data.password1 ? data.password1[0] : 'Signup failed');\r\n+} else {\r\n+  console.log('Signup success:', data);\r\n+}\r\n+\r\n+\r\n+  const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+    // TODO: Add Google OAuth signup logic\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        {/* Google Signup */}\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Signup Form */}\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">\r\n+              {error}\r\n+            </p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748952194798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,154 +13,8 @@\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n   const [error, setError] = useState('');\r\n \r\n-  const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-  method: 'POST',\r\n-  headers: {\r\n-    'Content-Type': 'application/json',\r\n-  },\r\n-  body: JSON.stringify({ email, password1: password, password2: confirmPassword }),\r\n-});\r\n-\r\n-const data = await res.json();\r\n-\r\n-if (!res.ok) {\r\n-  console.error('Signup error:', data);\r\n-  setError(data.email ? data.email[0] : data.password1 ? data.password1[0] : 'Signup failed');\r\n-} else {\r\n-  console.log('Signup success:', data);\r\n-}\r\n-\r\n-\r\n-  const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-    // TODO: Add Google OAuth signup logic\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        {/* Google Signup */}\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Signup Form */}\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">\r\n-              {error}\r\n-            </p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function SignupPage() {\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n   const handleSignup = async (e: React.FormEvent) => {\r\n   e.preventDefault();\r\n   setError('');\r\n \r\n@@ -169,34 +23,44 @@\n     return;\r\n   }\r\n \r\n   try {\r\n-    const res = await fetch('http://localhost:8000/api/auth/registration/', { ... }, {\r\n+    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json',\r\n       },\r\n       body: JSON.stringify({\r\n         email: email,\r\n-        password: password,\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n       }),\r\n     });\r\n \r\n     const data = await res.json();\r\n \r\n     if (res.ok) {\r\n-      // ✅ Signup successful - maybe redirect or auto-login\r\n       console.log('Signup successful!', data);\r\n-      window.location.href = '/login'; // Or auto login with returned token\r\n+      window.location.href = '/login'; // Redirect after signup\r\n     } else {\r\n-      setError(data.detail || 'Signup failed!');\r\n+      // Show detailed error messages from backend if available\r\n+      if (data.email) {\r\n+        setError(data.email[0]);\r\n+      } else if (data.password1) {\r\n+        setError(data.password1[0]);\r\n+      } else if (data.non_field_errors) {\r\n+        setError(data.non_field_errors[0]);\r\n+      } else {\r\n+        setError('Signup failed!');\r\n+      }\r\n     }\r\n   } catch (err) {\r\n     console.error(err);\r\n     setError('Something went wrong!');\r\n   }\r\n };\r\n \r\n+\r\n   const handleGoogleSignup = () => {\r\n     console.log('Signup with Google clicked');\r\n     // TODO: Add Google OAuth signup logic\r\n   };\r\n"
                },
                {
                    "date": 1748952570240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,11 @@\n \r\n   try {\r\n     const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n       method: 'POST',\r\n-      headers: {\r\n-        'Content-Type': 'application/json',\r\n-      },\r\n+      headers: { 'Content-Type': 'application/json' },\r\n       body: JSON.stringify({\r\n-        email: email,\r\n+        email: email.trim(),\r\n         password1: password,\r\n         password2: confirmPassword,\r\n       }),\r\n     });\r\n@@ -39,17 +37,16 @@\n     const data = await res.json();\r\n \r\n     if (res.ok) {\r\n       console.log('Signup successful!', data);\r\n-      window.location.href = '/login'; // Redirect after signup\r\n+      window.location.href = '/login';\r\n     } else {\r\n-      // Show detailed error messages from backend if available\r\n-      if (data.email) {\r\n-        setError(data.email[0]);\r\n-      } else if (data.password1) {\r\n-        setError(data.password1[0]);\r\n-      } else if (data.non_field_errors) {\r\n-        setError(data.non_field_errors[0]);\r\n+      let messages = [];\r\n+      if (data.email) messages.push(data.email.join(' '));\r\n+      if (data.password1) messages.push(data.password1.join(' '));\r\n+      if (data.non_field_errors) messages.push(data.non_field_errors.join(' '));\r\n+      if (messages.length > 0) {\r\n+        setError(messages.join(' '));\r\n       } else {\r\n         setError('Signup failed!');\r\n       }\r\n     }\r\n"
                },
                {
                    "date": 1748953557878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,69 +6,65 @@\n import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n import { Button } from '@/components/ui/button';\r\n \r\n export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n   const [error, setError] = useState('');\r\n \r\n   const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n+    e.preventDefault();\r\n+    setError('');\r\n \r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n \r\n-  try {\r\n-    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-      method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json' },\r\n-      body: JSON.stringify({\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      }),\r\n-    });\r\n+    try {\r\n+      const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        }),\r\n+      });\r\n \r\n-    const data = await res.json();\r\n+      const data = await res.json();\r\n \r\n-    if (res.ok) {\r\n-      console.log('Signup successful!', data);\r\n-      window.location.href = '/login';\r\n-    } else {\r\n-      let messages = [];\r\n-      if (data.email) messages.push(data.email.join(' '));\r\n-      if (data.password1) messages.push(data.password1.join(' '));\r\n-      if (data.non_field_errors) messages.push(data.non_field_errors.join(' '));\r\n-      if (messages.length > 0) {\r\n-        setError(messages.join(' '));\r\n+      if (res.ok) {\r\n+        console.log('Signup successful!', data);\r\n+        window.location.href = '/login';\r\n       } else {\r\n-        setError('Signup failed!');\r\n+        // 🔥 Print and format all actual Allauth errors\r\n+        let messages = [];\r\n+        for (let field in data) {\r\n+          messages.push(`${field}: ${data[field].join(' ')}`);\r\n+        }\r\n+        setError(messages.join(' | '));\r\n       }\r\n+    } catch (err) {\r\n+      console.error(err);\r\n+      setError('Something went wrong!');\r\n     }\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    setError('Something went wrong!');\r\n-  }\r\n-};\r\n+  };\r\n \r\n-\r\n   const handleGoogleSignup = () => {\r\n     console.log('Signup with Google clicked');\r\n-    // TODO: Add Google OAuth signup logic\r\n   };\r\n \r\n   return (\r\n     <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n       <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n         <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n \r\n-        {/* Google Signup */}\r\n         <Button\r\n           onClick={handleGoogleSignup}\r\n           className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n           variant=\"outline\"\r\n@@ -84,11 +80,27 @@\n             or sign up with email\r\n           </div>\r\n         </div>\r\n \r\n-        {/* Signup Form */}\r\n         <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n           <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n             <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n               Email\r\n             </label>\r\n             <input\r\n@@ -101,8 +113,9 @@\n               placeholder=\"you@example.com\"\r\n             />\r\n           </div>\r\n \r\n+          {/* Password */}\r\n           <div className=\"relative\">\r\n             <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n               Password\r\n             </label>\r\n@@ -124,8 +137,9 @@\n               {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n             </button>\r\n           </div>\r\n \r\n+          {/* Confirm Password */}\r\n           <div className=\"relative\">\r\n             <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n               Confirm Password\r\n             </label>\r\n@@ -147,12 +161,11 @@\n               {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n             </button>\r\n           </div>\r\n \r\n+          {/* Error Message */}\r\n           {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">\r\n-              {error}\r\n-            </p>\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n           )}\r\n \r\n           <Button type=\"submit\" className=\"w-full\">\r\n             Sign Up\r\n"
                },
                {
                    "date": 1748953861301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,196 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await res.json();\r\n+\r\n+      if (res.ok) {\r\n+  console.log('Signup successful!', data);\r\n+\r\n+  // Now login the user directly\r\n+  const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+    method: 'POST',\r\n+    headers: { 'Content-Type': 'application/json' },\r\n+    body: JSON.stringify({\r\n+      username: username.trim(),\r\n+      password: password,\r\n+    }),\r\n+  });\r\n+\r\n+  const loginData = await loginRes.json();\r\n+\r\n+  if (loginRes.ok) {\r\n+    // Save the token (if using JWT or token auth)\r\n+    localStorage.setItem('authToken', loginData.key); // or loginData.token depending on your backend\r\n+    console.log('Login successful! Token stored.');\r\n+\r\n+    // Redirect to homepage\r\n+    window.location.href = '/';\r\n+  } else {\r\n+    setError('Signup successful but login failed. Please try logging in manually.');\r\n+  }\r\n+}\r\n+\r\n+  };\r\n+\r\n+  const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748953954766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,243 +15,69 @@\n   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n   const [error, setError] = useState('');\r\n \r\n   const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n+  e.preventDefault();\r\n+  setError('');\r\n \r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await res.json();\r\n-\r\n-      if (res.ok) {\r\n-  console.log('Signup successful!', data);\r\n-\r\n-  // Now login the user directly\r\n-  const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n-    method: 'POST',\r\n-    headers: { 'Content-Type': 'application/json' },\r\n-    body: JSON.stringify({\r\n-      username: username.trim(),\r\n-      password: password,\r\n-    }),\r\n-  });\r\n-\r\n-  const loginData = await loginRes.json();\r\n-\r\n-  if (loginRes.ok) {\r\n-    // Save the token (if using JWT or token auth)\r\n-    localStorage.setItem('authToken', loginData.key); // or loginData.token depending on your backend\r\n-    console.log('Login successful! Token stored.');\r\n-\r\n-    // Redirect to homepage\r\n-    window.location.href = '/';\r\n-  } else {\r\n-    setError('Signup successful but login failed. Please try logging in manually.');\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n   }\r\n-}\r\n \r\n-  };\r\n+  try {\r\n+    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+      method: 'POST',\r\n+      headers: { 'Content-Type': 'application/json' },\r\n+      body: JSON.stringify({\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      }),\r\n+    });\r\n \r\n-  const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n+    const data = await res.json();\r\n \r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+    if (res.ok) {\r\n+      console.log('Signup successful!', data);\r\n \r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+      // ✅ Automatically log the user in\r\n+      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({\r\n           username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n+          password: password,\r\n         }),\r\n       });\r\n \r\n-      const data = await res.json();\r\n+      const loginData = await loginRes.json();\r\n \r\n-      if (res.ok) {\r\n-        console.log('Signup successful!', data);\r\n-        window.location.href = '/login';\r\n+      if (loginRes.ok) {\r\n+        // ✅ Store the token (modify if you use JWT instead of session auth)\r\n+        localStorage.setItem('authToken', loginData.key);\r\n+        console.log('Login successful!', loginData);\r\n+\r\n+        // ✅ Redirect to homepage\r\n+        window.location.href = '/';\r\n       } else {\r\n-        // 🔥 Print and format all actual Allauth errors\r\n-        let messages = [];\r\n-        for (let field in data) {\r\n-          messages.push(`${field}: ${data[field].join(' ')}`);\r\n-        }\r\n-        setError(messages.join(' | '));\r\n+        // ✅ Fallback if login fails\r\n+        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n       }\r\n-    } catch (err) {\r\n-      console.error(err);\r\n-      setError('Something went wrong!');\r\n+    } else {\r\n+      // 🔥 Print and format all actual Allauth errors\r\n+      let messages = [];\r\n+      for (let field in data) {\r\n+        messages.push(`${field}: ${data[field].join(' ')}`);\r\n+      }\r\n+      setError(messages.join(' | '));\r\n     }\r\n-  };\r\n-\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    setError('Something went wrong!');\r\n+  }\r\n+};\r\n   const handleGoogleSignup = () => {\r\n     console.log('Signup with Google clicked');\r\n   };\r\n \r\n"
                },
                {
                    "date": 1748953959818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+  e.preventDefault();\r\n+  setError('');\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n+  }\r\n+\r\n+  try {\r\n+    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+      method: 'POST',\r\n+      headers: { 'Content-Type': 'application/json' },\r\n+      body: JSON.stringify({\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      }),\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+\r\n+    if (res.ok) {\r\n+      console.log('Signup successful!', data);\r\n+\r\n+      // ✅ Automatically log the user in\r\n+      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          username: username.trim(),\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const loginData = await loginRes.json();\r\n+\r\n+      if (loginRes.ok) {\r\n+        // ✅ Store the token (modify if you use JWT instead of session auth)\r\n+        localStorage.setItem('authToken', loginData.key);\r\n+        console.log('Login successful!', loginData);\r\n+\r\n+        // ✅ Redirect to homepage\r\n+        window.location.href = '/';\r\n+      } else {\r\n+        // ✅ Fallback if login fails\r\n+        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n+      }\r\n+    } else {\r\n+      // 🔥 Print and format all actual Allauth errors\r\n+      let messages = [];\r\n+      for (let field in data) {\r\n+        messages.push(`${field}: ${data[field].join(' ')}`);\r\n+      }\r\n+      setError(messages.join(' | '));\r\n+    }\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    setError('Something went wrong!');\r\n+  }\r\n+};\r\n+\r\n+\r\n+const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748954160756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n     return;\r\n   }\r\n \r\n   try {\r\n+    // Step 1: Sign up the user\r\n     const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n       method: 'POST',\r\n       headers: { 'Content-Type': 'application/json' },\r\n       body: JSON.stringify({\r\n@@ -40,39 +41,38 @@\n \r\n     if (res.ok) {\r\n       console.log('Signup successful!', data);\r\n \r\n-      // ✅ Automatically log the user in\r\n+      // Step 2: Try logging in automatically\r\n       const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({\r\n-          username: username.trim(),\r\n+          username: username.trim(), // Or use email if required by your backend\r\n           password: password,\r\n         }),\r\n       });\r\n \r\n       const loginData = await loginRes.json();\r\n \r\n       if (loginRes.ok) {\r\n-        // ✅ Store the token (modify if you use JWT instead of session auth)\r\n-        localStorage.setItem('authToken', loginData.key);\r\n-        console.log('Login successful!', loginData);\r\n-\r\n-        // ✅ Redirect to homepage\r\n+        console.log('Auto-login successful!');\r\n+        localStorage.setItem('authToken', loginData.key); // adjust based on token format\r\n         window.location.href = '/';\r\n       } else {\r\n-        // ✅ Fallback if login fails\r\n+        console.error('Auto-login failed:', loginData);\r\n         setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n       }\r\n+\r\n     } else {\r\n-      // 🔥 Print and format all actual Allauth errors\r\n+      // Handle signup error\r\n       let messages = [];\r\n       for (let field in data) {\r\n         messages.push(`${field}: ${data[field].join(' ')}`);\r\n       }\r\n       setError(messages.join(' | '));\r\n     }\r\n+\r\n   } catch (err) {\r\n     console.error(err);\r\n     setError('Something went wrong!');\r\n   }\r\n"
                },
                {
                    "date": 1748954269600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+  e.preventDefault();\r\n+  setError('');\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n+  }\r\n+\r\n+  try {\r\n+    // Step 1: Sign up the user\r\n+    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+      method: 'POST',\r\n+      headers: { 'Content-Type': 'application/json' },\r\n+      body: JSON.stringify({\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      }),\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+\r\n+    if (res.ok) {\r\n+      console.log('Signup successful!', data);\r\n+\r\n+      // Step 2: Try logging in automatically\r\n+      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+  method: 'POST',\r\n+  headers: { 'Content-Type': 'application/json' },\r\n+  body: JSON.stringify({\r\n+    email: email.trim(), // ✅ Use email instead of username\r\n+    password: password,\r\n+  }),\r\n+});\r\n+\r\n+      const loginData = await loginRes.json();\r\n+\r\n+      if (loginRes.ok) {\r\n+        console.log('Auto-login successful!');\r\n+        localStorage.setItem('authToken', loginData.key); // adjust based on token format\r\n+        window.location.href = '/';\r\n+      } else {\r\n+        console.error('Auto-login failed:', loginData);\r\n+        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n+      }\r\n+\r\n+    } else {\r\n+      // Handle signup error\r\n+      let messages = [];\r\n+      for (let field in data) {\r\n+        messages.push(`${field}: ${data[field].join(' ')}`);\r\n+      }\r\n+      setError(messages.join(' | '));\r\n+    }\r\n+\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    setError('Something went wrong!');\r\n+  }\r\n+};\r\n+\r\n+\r\n+const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748954541354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+ const handleSignup = async (e: React.FormEvent) => {\r\n+  e.preventDefault();\r\n+  setError('');\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n+  }\r\n+\r\n+  try {\r\n+    // Signup request\r\n+    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+      method: 'POST',\r\n+      headers: { 'Content-Type': 'application/json' },\r\n+      body: JSON.stringify({\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      }),\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+\r\n+    if (res.ok) {\r\n+      console.log('Signup successful!', data);\r\n+\r\n+      // Auto-login right after signup\r\n+      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          email: email.trim(),     // use email here\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const loginData = await loginRes.json();\r\n+\r\n+      if (loginRes.ok) {\r\n+        console.log('Auto-login successful!', loginData);\r\n+        // Save your token here (e.g. localStorage)\r\n+        localStorage.setItem('token', loginData.access);\r\n+        // Redirect to home page\r\n+        window.location.href = '/';\r\n+      } else {\r\n+        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n+        console.error('Auto-login failed:', loginData);\r\n+      }\r\n+    } else {\r\n+      // Show signup errors\r\n+      let messages = [];\r\n+      for (let field in data) {\r\n+        messages.push(`${field}: ${data[field].join(' ')}`);\r\n+      }\r\n+      setError(messages.join(' | '));\r\n+    }\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    setError('Something went wrong!');\r\n+  }\r\n+};\r\n+\r\n+\r\n+const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748954666666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,211 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+ const handleSignup = async (e: React.FormEvent) => {\r\n+  e.preventDefault();\r\n+  setError('');\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n+  }\r\n+\r\n+  try {\r\n+    // Signup request\r\n+    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+      method: 'POST',\r\n+      headers: { 'Content-Type': 'application/json' },\r\n+      body: JSON.stringify({\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      }),\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+\r\n+    if (res.ok) {\r\n+      console.log('Signup successful!', data);\r\n+\r\n+      // Auto-login right after signup\r\n+      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          email: email.trim(),     // use email here\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const loginData = await loginRes.json();\r\n+\r\n+      if (res.ok) {\r\n+  console.log('Signup successful!', data);\r\n+\r\n+  console.log('Logging in with:', { email: email.trim(), password });\r\n+\r\n+  const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+    method: 'POST',\r\n+    headers: { 'Content-Type': 'application/json' },\r\n+    body: JSON.stringify({\r\n+      email: email.trim(),\r\n+      password: password,\r\n+    }),\r\n+  });\r\n+\r\n+  const loginData = await loginRes.json();\r\n+\r\n+  if (loginRes.ok) {\r\n+    console.log('Auto-login successful!', loginData);\r\n+    localStorage.setItem('token', loginData.access);\r\n+    window.location.href = '/';\r\n+  } else {\r\n+    setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n+    console.error('Auto-login failed:', loginData);\r\n+  }\r\n+}\r\n+};\r\n+\r\n+\r\n+const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748954676137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,219 +53,8 @@\n       });\r\n \r\n       const loginData = await loginRes.json();\r\n \r\n-      if (res.ok) {\r\n-  console.log('Signup successful!', data);\r\n-\r\n-  console.log('Logging in with:', { email: email.trim(), password });\r\n-\r\n-  const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n-    method: 'POST',\r\n-    headers: { 'Content-Type': 'application/json' },\r\n-    body: JSON.stringify({\r\n-      email: email.trim(),\r\n-      password: password,\r\n-    }),\r\n-  });\r\n-\r\n-  const loginData = await loginRes.json();\r\n-\r\n-  if (loginRes.ok) {\r\n-    console.log('Auto-login successful!', loginData);\r\n-    localStorage.setItem('token', loginData.access);\r\n-    window.location.href = '/';\r\n-  } else {\r\n-    setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n-    console.error('Auto-login failed:', loginData);\r\n-  }\r\n-}\r\n-};\r\n-\r\n-\r\n-const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n- const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n-\r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n-\r\n-  try {\r\n-    // Signup request\r\n-    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-      method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json' },\r\n-      body: JSON.stringify({\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      }),\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-\r\n-    if (res.ok) {\r\n-      console.log('Signup successful!', data);\r\n-\r\n-      // Auto-login right after signup\r\n-      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          email: email.trim(),     // use email here\r\n-          password: password,\r\n-        }),\r\n-      });\r\n-\r\n-      const loginData = await loginRes.json();\r\n-\r\n       if (loginRes.ok) {\r\n         console.log('Auto-login successful!', loginData);\r\n         // Save your token here (e.g. localStorage)\r\n         localStorage.setItem('token', loginData.access);\r\n@@ -416,626 +205,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n-\r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n-\r\n-  try {\r\n-    // Step 1: Sign up the user\r\n-    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-      method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json' },\r\n-      body: JSON.stringify({\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      }),\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-\r\n-    if (res.ok) {\r\n-      console.log('Signup successful!', data);\r\n-\r\n-      // Step 2: Try logging in automatically\r\n-      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n-  method: 'POST',\r\n-  headers: { 'Content-Type': 'application/json' },\r\n-  body: JSON.stringify({\r\n-    email: email.trim(), // ✅ Use email instead of username\r\n-    password: password,\r\n-  }),\r\n-});\r\n-\r\n-      const loginData = await loginRes.json();\r\n-\r\n-      if (loginRes.ok) {\r\n-        console.log('Auto-login successful!');\r\n-        localStorage.setItem('authToken', loginData.key); // adjust based on token format\r\n-        window.location.href = '/';\r\n-      } else {\r\n-        console.error('Auto-login failed:', loginData);\r\n-        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n-      }\r\n-\r\n-    } else {\r\n-      // Handle signup error\r\n-      let messages = [];\r\n-      for (let field in data) {\r\n-        messages.push(`${field}: ${data[field].join(' ')}`);\r\n-      }\r\n-      setError(messages.join(' | '));\r\n-    }\r\n-\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    setError('Something went wrong!');\r\n-  }\r\n-};\r\n-\r\n-\r\n-const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n-\r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n-\r\n-  try {\r\n-    // Step 1: Sign up the user\r\n-    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-      method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json' },\r\n-      body: JSON.stringify({\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      }),\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-\r\n-    if (res.ok) {\r\n-      console.log('Signup successful!', data);\r\n-\r\n-      // Step 2: Try logging in automatically\r\n-      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          username: username.trim(), // Or use email if required by your backend\r\n-          password: password,\r\n-        }),\r\n-      });\r\n-\r\n-      const loginData = await loginRes.json();\r\n-\r\n-      if (loginRes.ok) {\r\n-        console.log('Auto-login successful!');\r\n-        localStorage.setItem('authToken', loginData.key); // adjust based on token format\r\n-        window.location.href = '/';\r\n-      } else {\r\n-        console.error('Auto-login failed:', loginData);\r\n-        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n-      }\r\n-\r\n-    } else {\r\n-      // Handle signup error\r\n-      let messages = [];\r\n-      for (let field in data) {\r\n-        messages.push(`${field}: ${data[field].join(' ')}`);\r\n-      }\r\n-      setError(messages.join(' | '));\r\n-    }\r\n-\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    setError('Something went wrong!');\r\n-  }\r\n-};\r\n-\r\n-\r\n-const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n-\r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n-\r\n-  try {\r\n-    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-      method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json' },\r\n-      body: JSON.stringify({\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      }),\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-\r\n-    if (res.ok) {\r\n-      console.log('Signup successful!', data);\r\n-\r\n-      // ✅ Automatically log the user in\r\n-      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          username: username.trim(),\r\n-          password: password,\r\n-        }),\r\n-      });\r\n-\r\n-      const loginData = await loginRes.json();\r\n-\r\n-      if (loginRes.ok) {\r\n-        // ✅ Store the token (modify if you use JWT instead of session auth)\r\n-        localStorage.setItem('authToken', loginData.key);\r\n-        console.log('Login successful!', loginData);\r\n-\r\n-        // ✅ Redirect to homepage\r\n-        window.location.href = '/';\r\n-      } else {\r\n-        // ✅ Fallback if login fails\r\n-        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n-      }\r\n-    } else {\r\n-      // 🔥 Print and format all actual Allauth errors\r\n-      let messages = [];\r\n-      for (let field in data) {\r\n-        messages.push(`${field}: ${data[field].join(' ')}`);\r\n-      }\r\n-      setError(messages.join(' | '));\r\n-    }\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    setError('Something went wrong!');\r\n-  }\r\n-};\r\n-  const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1748954713400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n   const [error, setError] = useState('');\r\n \r\n- const handleSignup = async (e: React.FormEvent) => {\r\n+const handleSignup = async (e: React.FormEvent) => {\r\n   e.preventDefault();\r\n   setError('');\r\n \r\n   if (password !== confirmPassword) {\r\n@@ -41,33 +41,34 @@\n \r\n     if (res.ok) {\r\n       console.log('Signup successful!', data);\r\n \r\n+      // Debug log to verify values sent to login\r\n+      console.log('Attempting auto-login with:', { email: email.trim(), password });\r\n+\r\n       // Auto-login right after signup\r\n       const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({\r\n-          email: email.trim(),     // use email here\r\n+          email: email.trim(),\r\n           password: password,\r\n         }),\r\n       });\r\n \r\n       const loginData = await loginRes.json();\r\n \r\n       if (loginRes.ok) {\r\n         console.log('Auto-login successful!', loginData);\r\n-        // Save your token here (e.g. localStorage)\r\n         localStorage.setItem('token', loginData.access);\r\n-        // Redirect to home page\r\n         window.location.href = '/';\r\n       } else {\r\n         setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n         console.error('Auto-login failed:', loginData);\r\n       }\r\n     } else {\r\n-      // Show signup errors\r\n-      let messages = [];\r\n+      // Format signup errors nicely\r\n+      let messages: string[] = [];\r\n       for (let field in data) {\r\n         messages.push(`${field}: ${data[field].join(' ')}`);\r\n       }\r\n       setError(messages.join(' | '));\r\n@@ -78,8 +79,9 @@\n   }\r\n };\r\n \r\n \r\n+\r\n const handleGoogleSignup = () => {\r\n     console.log('Signup with Google clicked');\r\n   };\r\n \r\n"
                },
                {
                    "date": 1748954948717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,15 +42,20 @@\n     if (res.ok) {\r\n       console.log('Signup successful!', data);\r\n \r\n       // Debug log to verify values sent to login\r\n-      console.log('Attempting auto-login with:', { email: email.trim(), password });\r\n+      console.log('Attempting auto-login with:', {\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password,\r\n+      });\r\n \r\n-      // Auto-login right after signup\r\n+      // Auto-login right after signup with username, email, and password\r\n       const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({\r\n+          username: username.trim(),\r\n           email: email.trim(),\r\n           password: password,\r\n         }),\r\n       });\r\n"
                },
                {
                    "date": 1748955295943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,19 +43,17 @@\n       console.log('Signup successful!', data);\r\n \r\n       // Debug log to verify values sent to login\r\n       console.log('Attempting auto-login with:', {\r\n-        username: username.trim(),\r\n         email: email.trim(),\r\n         password,\r\n       });\r\n \r\n-      // Auto-login right after signup with username, email, and password\r\n+      // Auto-login right after signup with ONLY email and password\r\n       const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({\r\n-          username: username.trim(),\r\n           email: email.trim(),\r\n           password: password,\r\n         }),\r\n       });\r\n@@ -84,9 +82,8 @@\n   }\r\n };\r\n \r\n \r\n-\r\n const handleGoogleSignup = () => {\r\n     console.log('Signup with Google clicked');\r\n   };\r\n \r\n"
                },
                {
                    "date": 1749018351216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,91 +1,88 @@\n 'use client';\r\n \r\n import { useState } from 'react';\r\n+import { useRouter } from 'next/navigation';\r\n import Link from 'next/link';\r\n+import { toast } from 'react-hot-toast';\r\n import { FcGoogle } from 'react-icons/fc';\r\n import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n import { Button } from '@/components/ui/button';\r\n+import { Loader2 } from 'lucide-react';\r\n \r\n export default function SignupPage() {\r\n+  const router = useRouter();\r\n+\r\n   const [username, setUsername] = useState('');\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n \r\n-const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n \r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n+    if (password !== confirmPassword) {\r\n+      toast.error('Passwords do not match!');\r\n+      return;\r\n+    }\r\n \r\n-  try {\r\n-    // Signup request\r\n-    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-      method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json' },\r\n-      body: JSON.stringify({\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      }),\r\n-    });\r\n+    setIsSubmitting(true);\r\n \r\n-    const data = await res.json();\r\n-\r\n-    if (res.ok) {\r\n-      console.log('Signup successful!', data);\r\n-\r\n-      // Debug log to verify values sent to login\r\n-      console.log('Attempting auto-login with:', {\r\n-        email: email.trim(),\r\n-        password,\r\n-      });\r\n-\r\n-      // Auto-login right after signup with ONLY email and password\r\n-      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+    try {\r\n+      const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({\r\n+          username: username.trim(),\r\n           email: email.trim(),\r\n-          password: password,\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n         }),\r\n       });\r\n \r\n-      const loginData = await loginRes.json();\r\n+      const data = await res.json();\r\n \r\n-      if (loginRes.ok) {\r\n-        console.log('Auto-login successful!', loginData);\r\n-        localStorage.setItem('token', loginData.access);\r\n-        window.location.href = '/';\r\n+      if (res.ok) {\r\n+        toast.success('Signup successful! Logging in...');\r\n+\r\n+        // Auto-login after signup\r\n+        const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+          method: 'POST',\r\n+          headers: { 'Content-Type': 'application/json' },\r\n+          body: JSON.stringify({\r\n+            email: email.trim(),\r\n+            password: password,\r\n+          }),\r\n+        });\r\n+\r\n+        const loginData = await loginRes.json();\r\n+\r\n+        if (loginRes.ok) {\r\n+          localStorage.setItem('token', loginData.access);\r\n+          router.push('/');\r\n+        } else {\r\n+          toast.error('Signup succeeded, but auto-login failed. Please log in manually.');\r\n+          console.error('Login error:', loginData);\r\n+        }\r\n       } else {\r\n-        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n-        console.error('Auto-login failed:', loginData);\r\n+        const messages = Object.entries(data)\r\n+          .map(([key, value]) => `${key}: ${(value as string[]).join(' ')}`)\r\n+          .join(' | ');\r\n+        toast.error(messages || 'Signup failed');\r\n       }\r\n-    } else {\r\n-      // Format signup errors nicely\r\n-      let messages: string[] = [];\r\n-      for (let field in data) {\r\n-        messages.push(`${field}: ${data[field].join(' ')}`);\r\n-      }\r\n-      setError(messages.join(' | '));\r\n+    } catch (error) {\r\n+      toast.error('Something went wrong!');\r\n+      console.error(error);\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n     }\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    setError('Something went wrong!');\r\n-  }\r\n-};\r\n+  };\r\n \r\n-\r\n-const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n+  const handleGoogleSignup = () => {\r\n+    toast('Google Signup not implemented yet.');\r\n   };\r\n \r\n   return (\r\n     <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n@@ -111,11 +108,9 @@\n \r\n         <form onSubmit={handleSignup} className=\"space-y-4\">\r\n           {/* Username */}\r\n           <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">Username</label>\r\n             <input\r\n               type=\"text\"\r\n               id=\"username\"\r\n               value={username}\r\n@@ -127,11 +122,9 @@\n           </div>\r\n \r\n           {/* Email */}\r\n           <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">Email</label>\r\n             <input\r\n               type=\"email\"\r\n               id=\"email\"\r\n               value={email}\r\n@@ -143,11 +136,9 @@\n           </div>\r\n \r\n           {/* Password */}\r\n           <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">Password</label>\r\n             <input\r\n               type={showPassword ? 'text' : 'password'}\r\n               id=\"password\"\r\n               value={password}\r\n@@ -158,20 +149,18 @@\n             />\r\n             <button\r\n               type=\"button\"\r\n               onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700\"\r\n               aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n             >\r\n               {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n             </button>\r\n           </div>\r\n \r\n           {/* Confirm Password */}\r\n           <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">Confirm Password</label>\r\n             <input\r\n               type={showConfirmPassword ? 'text' : 'password'}\r\n               id=\"confirmPassword\"\r\n               value={confirmPassword}\r\n@@ -182,22 +171,18 @@\n             />\r\n             <button\r\n               type=\"button\"\r\n               onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700\"\r\n               aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n             >\r\n               {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n             </button>\r\n           </div>\r\n \r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n+          {/* Submit */}\r\n+          <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\r\n+            {isSubmitting ? <Loader2 className=\"animate-spin mr-2 h-4 w-4\" /> : 'Sign Up'}\r\n           </Button>\r\n         </form>\r\n \r\n         <p className=\"text-center text-sm text-gray-500\">\r\n"
                },
                {
                    "date": 1749018427260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,212 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+const handleSignup = async (e: React.FormEvent) => {\r\n+  e.preventDefault();\r\n+  setError('');\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n+  }\r\n+\r\n+  try {\r\n+    // Signup request\r\n+    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+      method: 'POST',\r\n+      headers: { 'Content-Type': 'application/json' },\r\n+      body: JSON.stringify({\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      }),\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+\r\n+    if (res.ok) {\r\n+      console.log('Signup successful!', data);\r\n+\r\n+      // Debug log to verify values sent to login\r\n+      console.log('Attempting auto-login with:', {\r\n+        email: email.trim(),\r\n+        password,\r\n+      });\r\n+\r\n+      // Auto-login right after signup with ONLY email and password\r\n+      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const loginData = await loginRes.json();\r\n+\r\n+      if (loginRes.ok) {\r\n+        console.log('Auto-login successful!', loginData);\r\n+        localStorage.setItem('token', loginData.access);\r\n+        window.location.href = '/';\r\n+      } else {\r\n+        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n+        console.error('Auto-login failed:', loginData);\r\n+      }\r\n+    } else {\r\n+      // Format signup errors nicely\r\n+      let messages: string[] = [];\r\n+      for (let field in data) {\r\n+        messages.push(`${field}: ${data[field].join(' ')}`);\r\n+      }\r\n+      setError(messages.join(' | '));\r\n+    }\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    setError('Something went wrong!');\r\n+  }\r\n+};\r\n+\r\n+\r\n+const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749018507890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,190 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      // Signup request using axios\r\n+      const signupRes = await axios.post('http://localhost:8000/api/auth/registration/', {\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      });\r\n+\r\n+      console.log('Signup successful!', signupRes.data);\r\n+\r\n+      // Auto-login after successful signup\r\n+      const loginRes = await axios.post('http://localhost:8000/api/auth/login/', {\r\n+        email: email.trim(),\r\n+        password: password,\r\n+      });\r\n+\r\n+      console.log('Auto-login successful!', loginRes.data);\r\n+\r\n+      // Redirect to homepage (you can later fetch user session on page load)\r\n+      window.location.href = '/';\r\n+    } catch (err: any) {\r\n+      if (err.response && err.response.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+        for (let field in data) {\r\n+          messages.push(`${field}: ${Array.isArray(data[field]) ? data[field].join(' ') : data[field]}`);\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        console.error(err);\r\n+        setError('Something went wrong!');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749018547868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,413 +187,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n-\r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n-\r\n-  try {\r\n-    // Signup request\r\n-    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-      method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json' },\r\n-      body: JSON.stringify({\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      }),\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-\r\n-    if (res.ok) {\r\n-      console.log('Signup successful!', data);\r\n-\r\n-      // Debug log to verify values sent to login\r\n-      console.log('Attempting auto-login with:', {\r\n-        email: email.trim(),\r\n-        password,\r\n-      });\r\n-\r\n-      // Auto-login right after signup with ONLY email and password\r\n-      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        }),\r\n-      });\r\n-\r\n-      const loginData = await loginRes.json();\r\n-\r\n-      if (loginRes.ok) {\r\n-        console.log('Auto-login successful!', loginData);\r\n-        localStorage.setItem('token', loginData.access);\r\n-        window.location.href = '/';\r\n-      } else {\r\n-        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n-        console.error('Auto-login failed:', loginData);\r\n-      }\r\n-    } else {\r\n-      // Format signup errors nicely\r\n-      let messages: string[] = [];\r\n-      for (let field in data) {\r\n-        messages.push(`${field}: ${data[field].join(' ')}`);\r\n-      }\r\n-      setError(messages.join(' | '));\r\n-    }\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    setError('Something went wrong!');\r\n-  }\r\n-};\r\n-\r\n-\r\n-const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import { useRouter } from 'next/navigation';\r\n-import Link from 'next/link';\r\n-import { toast } from 'react-hot-toast';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import { Loader2 } from 'lucide-react';\r\n-\r\n-export default function SignupPage() {\r\n-  const router = useRouter();\r\n-\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      toast.error('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-\r\n-    try {\r\n-      const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await res.json();\r\n-\r\n-      if (res.ok) {\r\n-        toast.success('Signup successful! Logging in...');\r\n-\r\n-        // Auto-login after signup\r\n-        const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n-          method: 'POST',\r\n-          headers: { 'Content-Type': 'application/json' },\r\n-          body: JSON.stringify({\r\n-            email: email.trim(),\r\n-            password: password,\r\n-          }),\r\n-        });\r\n-\r\n-        const loginData = await loginRes.json();\r\n-\r\n-        if (loginRes.ok) {\r\n-          localStorage.setItem('token', loginData.access);\r\n-          router.push('/');\r\n-        } else {\r\n-          toast.error('Signup succeeded, but auto-login failed. Please log in manually.');\r\n-          console.error('Login error:', loginData);\r\n-        }\r\n-      } else {\r\n-        const messages = Object.entries(data)\r\n-          .map(([key, value]) => `${key}: ${(value as string[]).join(' ')}`)\r\n-          .join(' | ');\r\n-        toast.error(messages || 'Signup failed');\r\n-      }\r\n-    } catch (error) {\r\n-      toast.error('Something went wrong!');\r\n-      console.error(error);\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleSignup = () => {\r\n-    toast('Google Signup not implemented yet.');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">Username</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">Email</label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">Password</label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">Confirm Password</label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Submit */}\r\n-          <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\r\n-            {isSubmitting ? <Loader2 className=\"animate-spin mr-2 h-4 w-4\" /> : 'Sign Up'}\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1749018635439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,10 @@\n \r\n       console.log('Auto-login successful!', loginRes.data);\r\n \r\n       // Redirect to homepage (you can later fetch user session on page load)\r\n-      window.location.href = '/';\r\n+      // window.location.href = '/';\r\n+      router.push('/')\r\n     } catch (err: any) {\r\n       if (err.response && err.response.data) {\r\n         const data = err.response.data;\r\n         let messages: string[] = [];\r\n"
                },
                {
                    "date": 1749018668023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,190 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      // Signup request using axios\r\n+      const signupRes = await axios.post('http://localhost:8000/api/auth/registration/', {\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      });\r\n+\r\n+      console.log('Signup successful!', signupRes.data);\r\n+\r\n+      // Auto-login after successful signup\r\n+      const loginRes = await axios.post('http://localhost:8000/api/auth/login/', {\r\n+        email: email.trim(),\r\n+        password: password,\r\n+      });\r\n+\r\n+      console.log('Auto-login successful!', loginRes.data);\r\n+\r\n+      // Redirect to homepage (you can later fetch user session on page load)\r\n+      window.location.href = '/';\r\n+    } catch (err: any) {\r\n+      if (err.response && err.response.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+        for (let field in data) {\r\n+          messages.push(`${field}: ${Array.isArray(data[field]) ? data[field].join(' ') : data[field]}`);\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        console.error(err);\r\n+        setError('Something went wrong!');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749021016974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,190 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      // Signup request using axios\r\n+      const signupRes = await axios.post('http://localhost:8000/api/auth/registration/', {\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      });\r\n+\r\n+      console.log('Signup successful!', signupRes.data);\r\n+\r\n+      // Auto-login after successful signup\r\n+      const loginRes = await axios.post('http://localhost:8000/api/auth/login/', {\r\n+        email: email.trim(),\r\n+        password: password,\r\n+      });\r\n+\r\n+      console.log('Auto-login successful!', loginRes.data);\r\n+\r\n+      // Redirect to homepage (you can later fetch user session on page load)\r\n+      window.location.href = '/';\r\n+    } catch (err: any) {\r\n+      if (err.response && err.response.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+        for (let field in data) {\r\n+          messages.push(`${field}: ${Array.isArray(data[field]) ? data[field].join(' ') : data[field]}`);\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        console.error(err);\r\n+        setError('Something went wrong!');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749021140104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,212 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+const handleSignup = async (e: React.FormEvent) => {\r\n+  e.preventDefault();\r\n+  setError('');\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n+  }\r\n+\r\n+  try {\r\n+    // Signup request\r\n+    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n+      method: 'POST',\r\n+      headers: { 'Content-Type': 'application/json' },\r\n+      body: JSON.stringify({\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      }),\r\n+    });\r\n+\r\n+    const data = await res.json();\r\n+\r\n+    if (res.ok) {\r\n+      console.log('Signup successful!', data);\r\n+\r\n+      // Debug log to verify values sent to login\r\n+      console.log('Attempting auto-login with:', {\r\n+        email: email.trim(),\r\n+        password,\r\n+      });\r\n+\r\n+      // Auto-login right after signup with ONLY email and password\r\n+      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        }),\r\n+      });\r\n+\r\n+      const loginData = await loginRes.json();\r\n+\r\n+      if (loginRes.ok) {\r\n+        console.log('Auto-login successful!', loginData);\r\n+        localStorage.setItem('token', loginData.access);\r\n+        window.location.href = '/';\r\n+      } else {\r\n+        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n+        console.error('Auto-login failed:', loginData);\r\n+      }\r\n+    } else {\r\n+      // Format signup errors nicely\r\n+      let messages: string[] = [];\r\n+      for (let field in data) {\r\n+        messages.push(`${field}: ${data[field].join(' ')}`);\r\n+      }\r\n+      setError(messages.join(' | '));\r\n+    }\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    setError('Something went wrong!');\r\n+  }\r\n+};\r\n+\r\n+\r\n+const handleGoogleSignup = () => {\r\n+    console.log('Signup with Google clicked');\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <Button\r\n+          onClick={handleGoogleSignup}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n+        <div className=\"relative my-4\">\r\n+          <div className=\"absolute inset-0 flex items-center\">\r\n+            <div className=\"w-full border-t border-gray-300\" />\r\n+          </div>\r\n+          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n+            or sign up with email\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          {/* Username */}\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"yourusername\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Email */}\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {/* Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Confirm Password */}\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showConfirmPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n+            >\r\n+              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          {/* Error Message */}\r\n+          {error && (\r\n+            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n+          )}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Login here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749040810823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,174 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/auth/registration/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful:', res.data);\r\n+\r\n+      // Optionally auto-login after signup\r\n+      // Or redirect to login page\r\n+      window.location.href = '/login';\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        // Collect backend validation errors\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749041093892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     try {\r\n       const csrfToken = getCookie('csrftoken');\r\n \r\n       const res = await axios.post(\r\n-        'http://localhost:8000/auth/registration/',\r\n+        'http://localhost:8000/auth',\r\n         {\r\n           username: username.trim(),\r\n           email: email.trim(),\r\n           password1: password,\r\n@@ -171,787 +171,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n-\r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n-\r\n-  try {\r\n-    // Signup request\r\n-    const res = await fetch('http://localhost:8000/api/auth/registration/', {\r\n-      method: 'POST',\r\n-      headers: { 'Content-Type': 'application/json' },\r\n-      body: JSON.stringify({\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      }),\r\n-    });\r\n-\r\n-    const data = await res.json();\r\n-\r\n-    if (res.ok) {\r\n-      console.log('Signup successful!', data);\r\n-\r\n-      // Debug log to verify values sent to login\r\n-      console.log('Attempting auto-login with:', {\r\n-        email: email.trim(),\r\n-        password,\r\n-      });\r\n-\r\n-      // Auto-login right after signup with ONLY email and password\r\n-      const loginRes = await fetch('http://localhost:8000/api/auth/login/', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        }),\r\n-      });\r\n-\r\n-      const loginData = await loginRes.json();\r\n-\r\n-      if (loginRes.ok) {\r\n-        console.log('Auto-login successful!', loginData);\r\n-        localStorage.setItem('token', loginData.access);\r\n-        window.location.href = '/';\r\n-      } else {\r\n-        setError('Signup succeeded, but auto-login failed. Please login manually.');\r\n-        console.error('Auto-login failed:', loginData);\r\n-      }\r\n-    } else {\r\n-      // Format signup errors nicely\r\n-      let messages: string[] = [];\r\n-      for (let field in data) {\r\n-        messages.push(`${field}: ${data[field].join(' ')}`);\r\n-      }\r\n-      setError(messages.join(' | '));\r\n-    }\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    setError('Something went wrong!');\r\n-  }\r\n-};\r\n-\r\n-\r\n-const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      // Signup request using axios\r\n-      const signupRes = await axios.post('http://localhost:8000/api/auth/registration/', {\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      });\r\n-\r\n-      console.log('Signup successful!', signupRes.data);\r\n-\r\n-      // Auto-login after successful signup\r\n-      const loginRes = await axios.post('http://localhost:8000/api/auth/login/', {\r\n-        email: email.trim(),\r\n-        password: password,\r\n-      });\r\n-\r\n-      console.log('Auto-login successful!', loginRes.data);\r\n-\r\n-      // Redirect to homepage (you can later fetch user session on page load)\r\n-      window.location.href = '/';\r\n-    } catch (err: any) {\r\n-      if (err.response && err.response.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-        for (let field in data) {\r\n-          messages.push(`${field}: ${Array.isArray(data[field]) ? data[field].join(' ') : data[field]}`);\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        console.error(err);\r\n-        setError('Something went wrong!');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      // Signup request using axios\r\n-      const signupRes = await axios.post('http://localhost:8000/api/auth/registration/', {\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      });\r\n-\r\n-      console.log('Signup successful!', signupRes.data);\r\n-\r\n-      // Auto-login after successful signup\r\n-      const loginRes = await axios.post('http://localhost:8000/api/auth/login/', {\r\n-        email: email.trim(),\r\n-        password: password,\r\n-      });\r\n-\r\n-      console.log('Auto-login successful!', loginRes.data);\r\n-\r\n-      // Redirect to homepage (you can later fetch user session on page load)\r\n-      window.location.href = '/';\r\n-    } catch (err: any) {\r\n-      if (err.response && err.response.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-        for (let field in data) {\r\n-          messages.push(`${field}: ${Array.isArray(data[field]) ? data[field].join(' ') : data[field]}`);\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        console.error(err);\r\n-        setError('Something went wrong!');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { FcGoogle } from 'react-icons/fc';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      // Signup request using axios\r\n-      const signupRes = await axios.post('http://localhost:8000/api/auth/registration/', {\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      });\r\n-\r\n-      console.log('Signup successful!', signupRes.data);\r\n-\r\n-      // Auto-login after successful signup\r\n-      const loginRes = await axios.post('http://localhost:8000/api/auth/login/', {\r\n-        email: email.trim(),\r\n-        password: password,\r\n-      });\r\n-\r\n-      console.log('Auto-login successful!', loginRes.data);\r\n-\r\n-      // Redirect to homepage (you can later fetch user session on page load)\r\n-      // window.location.href = '/';\r\n-      router.push('/')\r\n-    } catch (err: any) {\r\n-      if (err.response && err.response.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-        for (let field in data) {\r\n-          messages.push(`${field}: ${Array.isArray(data[field]) ? data[field].join(' ') : data[field]}`);\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        console.error(err);\r\n-        setError('Something went wrong!');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleSignup = () => {\r\n-    console.log('Signup with Google clicked');\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <Button\r\n-          onClick={handleGoogleSignup}\r\n-          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-          variant=\"outline\"\r\n-        >\r\n-          <FcGoogle size={20} /> Continue with Google\r\n-        </Button>\r\n-\r\n-        <div className=\"relative my-4\">\r\n-          <div className=\"absolute inset-0 flex items-center\">\r\n-            <div className=\"w-full border-t border-gray-300\" />\r\n-          </div>\r\n-          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n-            or sign up with email\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          {/* Username */}\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"yourusername\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Email */}\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {/* Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Confirm Password */}\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showConfirmPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n-            >\r\n-              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          {/* Error Message */}\r\n-          {error && (\r\n-            <p className=\"text-sm text-red-600 text-center\">{error}</p>\r\n-          )}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Login here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1749041103942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,174 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful:', res.data);\r\n+\r\n+      // Optionally auto-login after signup\r\n+      // Or redirect to login page\r\n+      window.location.href = '/login';\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        // Collect backend validation errors\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749041186135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,174 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful:', res.data);\r\n+\r\n+      // Optionally auto-login after signup\r\n+      // Or redirect to login page\r\n+      window.location.href = '/login';\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        // Collect backend validation errors\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749041397032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,175 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { useRouter } from 'next/navigation';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const router = useRouter();\r\n+\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful:', res.data);\r\n+\r\n+      // After successful signup, redirect using router.push()\r\n+      router.push('/login');\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749041521921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,582 +29,79 @@\n     return null;\r\n   };\r\n \r\n   const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n+  e.preventDefault();\r\n+  setError('');\r\n \r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n+  if (password !== confirmPassword) {\r\n+    setError('Passwords do not match!');\r\n+    return;\r\n+  }\r\n \r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n+  try {\r\n+    const csrfToken = getCookie('csrftoken');\r\n \r\n-      const res = await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n+    // 1. Signup request\r\n+    await axios.post(\r\n+      'http://localhost:8000/auth/',\r\n+      {\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+          'X-CSRFToken': csrfToken || '',\r\n         },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Signup successful:', res.data);\r\n-\r\n-      // After successful signup, redirect using router.push()\r\n-      router.push('/login');\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n       }\r\n-    }\r\n-  };\r\n+    );\r\n \r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+    console.log('Signup successful');\r\n \r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"Your username\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Log in here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      const res = await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n+    // 2. Automatic login request after signup\r\n+    await axios.post(\r\n+      'http://localhost:8000/auth/login/',  // Change this to your actual login API URL\r\n+      {\r\n+        username: username.trim(),\r\n+        password: password,\r\n+      },\r\n+      {\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+          'X-CSRFToken': csrfToken || '',\r\n         },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Signup successful:', res.data);\r\n-\r\n-      // Optionally auto-login after signup\r\n-      // Or redirect to login page\r\n-      window.location.href = '/login';\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        // Collect backend validation errors\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n       }\r\n-    }\r\n-  };\r\n+    );\r\n \r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+    console.log('Login successful, redirecting...');\r\n+    // 3. Redirect to dashboard or home\r\n+    router.push('/dashboard');  // Or wherever you want to go after login\r\n \r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"Your username\"\r\n-            />\r\n-          </div>\r\n+  } catch (err: any) {\r\n+    console.error(err);\r\n \r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n+    if (err.response?.data) {\r\n+      const data = err.response.data;\r\n+      let messages: string[] = [];\r\n \r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Log in here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      const res = await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n+      for (const key in data) {\r\n+        if (Array.isArray(data[key])) {\r\n+          messages.push(`${key}: ${data[key].join(' ')}`);\r\n+        } else if (typeof data[key] === 'string') {\r\n+          messages.push(`${key}: ${data[key]}`);\r\n         }\r\n-      );\r\n-\r\n-      console.log('Signup successful:', res.data);\r\n-\r\n-      // Optionally auto-login after signup\r\n-      // Or redirect to login page\r\n-      window.location.href = '/login';\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        // Collect backend validation errors\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n       }\r\n+      setError(messages.join(' | '));\r\n+    } else {\r\n+      setError('Signup or login failed. Please try again.');\r\n     }\r\n-  };\r\n+  }\r\n+};\r\n \r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n \r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"Your username\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Log in here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n-\r\n-export default function SignupPage() {\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      const res = await axios.post(\r\n-        'http://localhost:8000/auth',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Signup successful:', res.data);\r\n-\r\n-      // Optionally auto-login after signup\r\n-      // Or redirect to login page\r\n-      window.location.href = '/login';\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        // Collect backend validation errors\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n       <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n         <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n"
                },
                {
                    "date": 1749041612393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,79 +29,60 @@\n     return null;\r\n   };\r\n \r\n   const handleSignup = async (e: React.FormEvent) => {\r\n-  e.preventDefault();\r\n-  setError('');\r\n+    e.preventDefault();\r\n+    setError('');\r\n \r\n-  if (password !== confirmPassword) {\r\n-    setError('Passwords do not match!');\r\n-    return;\r\n-  }\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n \r\n-  try {\r\n-    const csrfToken = getCookie('csrftoken');\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n \r\n-    // 1. Signup request\r\n-    await axios.post(\r\n-      'http://localhost:8000/auth/',\r\n-      {\r\n-        username: username.trim(),\r\n-        email: email.trim(),\r\n-        password1: password,\r\n-        password2: confirmPassword,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-          'X-CSRFToken': csrfToken || '',\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n         },\r\n-      }\r\n-    );\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n \r\n-    console.log('Signup successful');\r\n+      console.log('Signup successful:', res.data);\r\n \r\n-    // 2. Automatic login request after signup\r\n-    await axios.post(\r\n-      'http://localhost:8000/auth/login/',  // Change this to your actual login API URL\r\n-      {\r\n-        username: username.trim(),\r\n-        password: password,\r\n-      },\r\n-      {\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-          'X-CSRFToken': csrfToken || '',\r\n-        },\r\n-      }\r\n-    );\r\n+      // After successful signup, redirect using router.push()\r\n+      router.push('/login');\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n \r\n-    console.log('Login successful, redirecting...');\r\n-    // 3. Redirect to dashboard or home\r\n-    router.push('/dashboard');  // Or wherever you want to go after login\r\n+      if (err.response?.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n \r\n-  } catch (err: any) {\r\n-    console.error(err);\r\n-\r\n-    if (err.response?.data) {\r\n-      const data = err.response.data;\r\n-      let messages: string[] = [];\r\n-\r\n-      for (const key in data) {\r\n-        if (Array.isArray(data[key])) {\r\n-          messages.push(`${key}: ${data[key].join(' ')}`);\r\n-        } else if (typeof data[key] === 'string') {\r\n-          messages.push(`${key}: ${data[key]}`);\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n         }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n       }\r\n-      setError(messages.join(' | '));\r\n-    } else {\r\n-      setError('Signup or login failed. Please try again.');\r\n     }\r\n-  }\r\n-};\r\n+  };\r\n \r\n-\r\n   return (\r\n     <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n       <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n         <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n"
                },
                {
                    "date": 1749041690765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,175 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { useRouter } from 'next/navigation';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const router = useRouter();\r\n+\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      const res = await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful:', res.data);\r\n+\r\n+      // After successful signup, redirect using router.push()\r\n+      router.push('/login');\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749041764671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,194 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { useRouter } from 'next/navigation';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // send cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const router = useRouter();\r\n+\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      // Signup API call\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful');\r\n+\r\n+      // Now, login immediately after signup\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n+        {\r\n+          username: username.trim(),\r\n+          password: password,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Login successful after signup');\r\n+\r\n+      // Redirect to homepage or dashboard after auto-login\r\n+      router.push('/dashboard'); // or '/' or wherever you want\r\n+\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749041789998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,202 +6,8 @@\n import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n import { Button } from '@/components/ui/button';\r\n import axios from 'axios';\r\n \r\n-axios.defaults.withCredentials = true; // send cookies\r\n-\r\n-export default function SignupPage() {\r\n-  const router = useRouter();\r\n-\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      // Signup API call\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Signup successful');\r\n-\r\n-      // Now, login immediately after signup\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n-        {\r\n-          username: username.trim(),\r\n-          password: password,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Login successful after signup');\r\n-\r\n-      // Redirect to homepage or dashboard after auto-login\r\n-      router.push('/dashboard'); // or '/' or wherever you want\r\n-\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"Your username\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Log in here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { useRouter } from 'next/navigation';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n \r\n export default function SignupPage() {\r\n   const router = useRouter();\r\n@@ -366,179 +172,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { useRouter } from 'next/navigation';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n-\r\n-export default function SignupPage() {\r\n-  const router = useRouter();\r\n-\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      const res = await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Signup successful:', res.data);\r\n-\r\n-      // After successful signup, redirect using router.push()\r\n-      router.push('/login');\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"Your username\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Log in here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1749041801302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n import { Button } from '@/components/ui/button';\r\n import axios from 'axios';\r\n \r\n-axios.defaults.withCredentials = true; // allow sending and receiving cookies\r\n+axios.defaults.withCredentials = true; // send cookies\r\n \r\n export default function SignupPage() {\r\n   const router = useRouter();\r\n \r\n@@ -40,9 +40,10 @@\n \r\n     try {\r\n       const csrfToken = getCookie('csrftoken');\r\n \r\n-      const res = await axios.post(\r\n+      // Signup API call\r\n+      await axios.post(\r\n         'http://localhost:8000/auth/',\r\n         {\r\n           username: username.trim(),\r\n           email: email.trim(),\r\n@@ -56,12 +57,30 @@\n           },\r\n         }\r\n       );\r\n \r\n-      console.log('Signup successful:', res.data);\r\n+      console.log('Signup successful');\r\n \r\n-      // After successful signup, redirect using router.push()\r\n-      router.push('/login');\r\n+      // Now, login immediately after signup\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n+        {\r\n+          username: username.trim(),\r\n+          password: password,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Login successful after signup');\r\n+\r\n+      // Redirect to homepage or dashboard after auto-login\r\n+      router.push('/dashboard'); // or '/' or wherever you want\r\n+\r\n     } catch (err: any) {\r\n       console.error(err);\r\n \r\n       if (err.response?.data) {\r\n"
                },
                {
                    "date": 1749041809372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n \r\n       console.log('Login successful after signup');\r\n \r\n       // Redirect to homepage or dashboard after auto-login\r\n-      router.push('/dashboard'); // or '/' or wherever you want\r\n+      router.push('/'); // or '/' or wherever you want\r\n \r\n     } catch (err: any) {\r\n       console.error(err);\r\n \r\n"
                },
                {
                    "date": 1749041818788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       // Now, login immediately after signup\r\n       await axios.post(\r\n         'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n         {\r\n-          username: username.trim(),\r\n+          username: email.trim(),\r\n           password: password,\r\n         },\r\n         {\r\n           headers: {\r\n"
                },
                {
                    "date": 1749041825312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       // Now, login immediately after signup\r\n       await axios.post(\r\n         'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n         {\r\n-          username: email.trim(),\r\n+          email: email.trim(),\r\n           password: password,\r\n         },\r\n         {\r\n           headers: {\r\n"
                },
                {
                    "date": 1749041883066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,194 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { useRouter } from 'next/navigation';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // send cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const router = useRouter();\r\n+\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      // Signup API call\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful');\r\n+\r\n+      // Now, login immediately after signup\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n+        {\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Login successful after signup');\r\n+\r\n+      // Redirect to homepage or dashboard after auto-login\r\n+      router.push('/'); // or '/' or wherever you want\r\n+\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749042017759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,199 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { useRouter } from 'next/navigation';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // send cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const router = useRouter();\r\n+\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      // Signup API call\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful');\r\n+\r\n+      // Now, login immediately after signup\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n+        {\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Login successful after signup');\r\n+\r\n+      // Redirect to homepage or dashboard after auto-login\r\n+      router.push('/'); // or '/' or wherever you want\r\n+\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749042057301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,209 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { useRouter } from 'next/navigation';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // send cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const router = useRouter();\r\n+\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      // Signup API call\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful');\r\n+\r\n+      // Now, login immediately after signup\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n+        {\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Login successful after signup');\r\n+\r\n+      // Redirect to homepage or dashboard after auto-login\r\n+      router.push('/'); // or '/' or wherever you want\r\n+\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+        {/* Google Login */}\r\n+                <Button\r\n+                  onClick={handleGoogleLogin}\r\n+                  className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+                  variant=\"outline\"\r\n+                >\r\n+                  <FcGoogle size={20} /> Continue with Google\r\n+                </Button>\r\n+        \r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749042063364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,16 +110,8 @@\n     <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n       <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n         <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n \r\n-        {/* Google Login */}\r\n-                <Button\r\n-                  onClick={handleGoogleLogin}\r\n-                  className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-                  variant=\"outline\"\r\n-                >\r\n-                  <FcGoogle size={20} /> Continue with Google\r\n-                </Button>\r\n         \r\n \r\n         <form onSubmit={handleSignup} className=\"space-y-4\">\r\n           <div>\r\n@@ -206,591 +198,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { useRouter } from 'next/navigation';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // send cookies\r\n-\r\n-export default function SignupPage() {\r\n-  const router = useRouter();\r\n-\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      // Signup API call\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Signup successful');\r\n-\r\n-      // Now, login immediately after signup\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n-        {\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Login successful after signup');\r\n-\r\n-      // Redirect to homepage or dashboard after auto-login\r\n-      router.push('/'); // or '/' or wherever you want\r\n-\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Google login clicked');\r\n-    // TODO: Add Google OAuth here\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"Your username\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Log in here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { useRouter } from 'next/navigation';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // send cookies\r\n-\r\n-export default function SignupPage() {\r\n-  const router = useRouter();\r\n-\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      // Signup API call\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Signup successful');\r\n-\r\n-      // Now, login immediately after signup\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n-        {\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Login successful after signup');\r\n-\r\n-      // Redirect to homepage or dashboard after auto-login\r\n-      router.push('/'); // or '/' or wherever you want\r\n-\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"Your username\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Log in here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { useRouter } from 'next/navigation';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // send cookies\r\n-\r\n-export default function SignupPage() {\r\n-  const router = useRouter();\r\n-\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      // Signup API call\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Signup successful');\r\n-\r\n-      // Now, login immediately after signup\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n-        {\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Login successful after signup');\r\n-\r\n-      // Redirect to homepage or dashboard after auto-login\r\n-      router.push('/'); // or '/' or wherever you want\r\n-\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"Your username\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Log in here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1749042072565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,15 @@\n     <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n       <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n         <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n \r\n-        \r\n+         <Button\r\n+                  onClick={handleGoogleLogin}\r\n+                  className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+                  variant=\"outline\"\r\n+                >\r\n+                  <FcGoogle size={20} /> Continue with Google\r\n+                </Button>\r\n \r\n         <form onSubmit={handleSignup} className=\"space-y-4\">\r\n           <div>\r\n             <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n"
                },
                {
                    "date": 1749042124681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,14 +111,14 @@\n       <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n         <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n \r\n          <Button\r\n-                  onClick={handleGoogleLogin}\r\n-                  className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-                  variant=\"outline\"\r\n-                >\r\n-                  <FcGoogle size={20} /> Continue with Google\r\n-                </Button>\r\n+            onClick={handleGoogleLogin}\r\n+            className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+            variant=\"outline\"\r\n+          >\r\n+            <FcGoogle size={20} /> Continue with Google\r\n+          </Button>\r\n \r\n         <form onSubmit={handleSignup} className=\"space-y-4\">\r\n           <div>\r\n             <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n"
                },
                {
                    "date": 1749042141851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+'use client';\r\n+\r\n+import { useState } from 'react';\r\n+import Link from 'next/link';\r\n+import { useRouter } from 'next/navigation';\r\n+import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n+import { Button } from '@/components/ui/button';\r\n+import { FcGoogle } from 'react-icons/fc';\r\n+import axios from 'axios';\r\n+\r\n+axios.defaults.withCredentials = true; // send cookies\r\n+\r\n+export default function SignupPage() {\r\n+  const router = useRouter();\r\n+\r\n+  const [username, setUsername] = useState('');\r\n+  const [email, setEmail] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [error, setError] = useState('');\r\n+\r\n+  // Get CSRF token from cookie\r\n+  const getCookie = (name: string) => {\r\n+    const cookies = document.cookie.split(';');\r\n+    for (let cookie of cookies) {\r\n+      const [key, val] = cookie.trim().split('=');\r\n+      if (key === name) return decodeURIComponent(val);\r\n+    }\r\n+    return null;\r\n+  };\r\n+\r\n+  const handleSignup = async (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    setError('');\r\n+\r\n+    if (password !== confirmPassword) {\r\n+      setError('Passwords do not match!');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const csrfToken = getCookie('csrftoken');\r\n+\r\n+      // Signup API call\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/',\r\n+        {\r\n+          username: username.trim(),\r\n+          email: email.trim(),\r\n+          password1: password,\r\n+          password2: confirmPassword,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Signup successful');\r\n+\r\n+      // Now, login immediately after signup\r\n+      await axios.post(\r\n+        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n+        {\r\n+          email: email.trim(),\r\n+          password: password,\r\n+        },\r\n+        {\r\n+          headers: {\r\n+            'Content-Type': 'application/json',\r\n+            'X-CSRFToken': csrfToken || '',\r\n+          },\r\n+        }\r\n+      );\r\n+\r\n+      console.log('Login successful after signup');\r\n+\r\n+      // Redirect to homepage or dashboard after auto-login\r\n+      router.push('/'); // or '/' or wherever you want\r\n+\r\n+    } catch (err: any) {\r\n+      console.error(err);\r\n+\r\n+      if (err.response?.data) {\r\n+        const data = err.response.data;\r\n+        let messages: string[] = [];\r\n+\r\n+        for (const key in data) {\r\n+          if (Array.isArray(data[key])) {\r\n+            messages.push(`${key}: ${data[key].join(' ')}`);\r\n+          } else if (typeof data[key] === 'string') {\r\n+            messages.push(`${key}: ${data[key]}`);\r\n+          }\r\n+        }\r\n+        setError(messages.join(' | '));\r\n+      } else {\r\n+        setError('Signup failed. Please try again.');\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoogleLogin = () => {\r\n+    console.log('Google login clicked');\r\n+    // TODO: Add Google OAuth here\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n+      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n+        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+\r\n+         <Button\r\n+            onClick={handleGoogleLogin}\r\n+            className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+            variant=\"outline\"\r\n+          >\r\n+            <FcGoogle size={20} /> Continue with Google\r\n+          </Button>\r\n+\r\n+        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n+          <div>\r\n+            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n+              Username\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              required\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"Your username\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n+              Email\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              id=\"email\"\r\n+              value={email}\r\n+              required\r\n+              onChange={(e) => setEmail(e.target.value)}\r\n+              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"you@example.com\"\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n+              Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"password\"\r\n+              value={password}\r\n+              required\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={() => setShowPassword(!showPassword)}\r\n+              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n+              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n+            >\r\n+              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"relative\">\r\n+            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n+              Confirm Password\r\n+            </label>\r\n+            <input\r\n+              type={showPassword ? 'text' : 'password'}\r\n+              id=\"confirmPassword\"\r\n+              value={confirmPassword}\r\n+              required\r\n+              onChange={(e) => setConfirmPassword(e.target.value)}\r\n+              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n+              placeholder=\"••••••••\"\r\n+            />\r\n+          </div>\r\n+\r\n+          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n+\r\n+          <Button type=\"submit\" className=\"w-full\">\r\n+            Sign Up\r\n+          </Button>\r\n+        </form>\r\n+\r\n+        <p className=\"text-center text-sm text-gray-500\">\r\n+          Already have an account?{' '}\r\n+          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n+            Log in here\r\n+          </Link>\r\n+        </p>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749042147449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,211 +205,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useState } from 'react';\r\n-import Link from 'next/link';\r\n-import { useRouter } from 'next/navigation';\r\n-import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n-import { Button } from '@/components/ui/button';\r\n-import axios from 'axios';\r\n-\r\n-axios.defaults.withCredentials = true; // send cookies\r\n-\r\n-export default function SignupPage() {\r\n-  const router = useRouter();\r\n-\r\n-  const [username, setUsername] = useState('');\r\n-  const [email, setEmail] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [confirmPassword, setConfirmPassword] = useState('');\r\n-  const [showPassword, setShowPassword] = useState(false);\r\n-  const [error, setError] = useState('');\r\n-\r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n-  const handleSignup = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    setError('');\r\n-\r\n-    if (password !== confirmPassword) {\r\n-      setError('Passwords do not match!');\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n-      // Signup API call\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Signup successful');\r\n-\r\n-      // Now, login immediately after signup\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n-        {\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n-\r\n-      console.log('Login successful after signup');\r\n-\r\n-      // Redirect to homepage or dashboard after auto-login\r\n-      router.push('/'); // or '/' or wherever you want\r\n-\r\n-    } catch (err: any) {\r\n-      console.error(err);\r\n-\r\n-      if (err.response?.data) {\r\n-        const data = err.response.data;\r\n-        let messages: string[] = [];\r\n-\r\n-        for (const key in data) {\r\n-          if (Array.isArray(data[key])) {\r\n-            messages.push(`${key}: ${data[key].join(' ')}`);\r\n-          } else if (typeof data[key] === 'string') {\r\n-            messages.push(`${key}: ${data[key]}`);\r\n-          }\r\n-        }\r\n-        setError(messages.join(' | '));\r\n-      } else {\r\n-        setError('Signup failed. Please try again.');\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoogleLogin = () => {\r\n-    console.log('Google login clicked');\r\n-    // TODO: Add Google OAuth here\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n-      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n-        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n-         <Button\r\n-            onClick={handleGoogleLogin}\r\n-            className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-            variant=\"outline\"\r\n-          >\r\n-            <FcGoogle size={20} /> Continue with Google\r\n-          </Button>\r\n-\r\n-        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n-          <div>\r\n-            <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n-              Username\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              required\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"Your username\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n-              Email\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              id=\"email\"\r\n-              value={email}\r\n-              required\r\n-              onChange={(e) => setEmail(e.target.value)}\r\n-              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"you@example.com\"\r\n-            />\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n-              Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"password\"\r\n-              value={password}\r\n-              required\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-            <button\r\n-              type=\"button\"\r\n-              onClick={() => setShowPassword(!showPassword)}\r\n-              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n-              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n-            >\r\n-              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n-            </button>\r\n-          </div>\r\n-\r\n-          <div className=\"relative\">\r\n-            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n-              Confirm Password\r\n-            </label>\r\n-            <input\r\n-              type={showPassword ? 'text' : 'password'}\r\n-              id=\"confirmPassword\"\r\n-              value={confirmPassword}\r\n-              required\r\n-              onChange={(e) => setConfirmPassword(e.target.value)}\r\n-              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n-              placeholder=\"••••••••\"\r\n-            />\r\n-          </div>\r\n-\r\n-          {error && <p className=\"text-red-600 text-sm\">{error}</p>}\r\n-\r\n-          <Button type=\"submit\" className=\"w-full\">\r\n-            Sign Up\r\n-          </Button>\r\n-        </form>\r\n-\r\n-        <p className=\"text-center text-sm text-gray-500\">\r\n-          Already have an account?{' '}\r\n-          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n-            Log in here\r\n-          </Link>\r\n-        </p>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1749042152669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n   return (\r\n     <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n       <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n         <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-\r\n+        {/* Google Login */}\r\n          <Button\r\n             onClick={handleGoogleLogin}\r\n             className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n             variant=\"outline\"\r\n"
                },
                {
                    "date": 1749042171167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,8 +110,9 @@\n   return (\r\n     <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n       <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n         <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n+        \r\n         {/* Google Login */}\r\n          <Button\r\n             onClick={handleGoogleLogin}\r\n             className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n"
                },
                {
                    "date": 1749064752049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,12 +5,10 @@\n import { useRouter } from 'next/navigation';\r\n import { HiEye, HiEyeOff } from 'react-icons/hi';\r\n import { Button } from '@/components/ui/button';\r\n import { FcGoogle } from 'react-icons/fc';\r\n-import axios from 'axios';\r\n+import { axiosWithCsrf } from '@/lib/axiosWithCsrf'; // ✅ use helper\r\n \r\n-axios.defaults.withCredentials = true; // send cookies\r\n-\r\n export default function SignupPage() {\r\n   const router = useRouter();\r\n \r\n   const [username, setUsername] = useState('');\r\n@@ -19,18 +17,8 @@\n   const [confirmPassword, setConfirmPassword] = useState('');\r\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [error, setError] = useState('');\r\n \r\n-  // Get CSRF token from cookie\r\n-  const getCookie = (name: string) => {\r\n-    const cookies = document.cookie.split(';');\r\n-    for (let cookie of cookies) {\r\n-      const [key, val] = cookie.trim().split('=');\r\n-      if (key === name) return decodeURIComponent(val);\r\n-    }\r\n-    return null;\r\n-  };\r\n-\r\n   const handleSignup = async (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n     setError('');\r\n \r\n@@ -39,49 +27,27 @@\n       return;\r\n     }\r\n \r\n     try {\r\n-      const csrfToken = getCookie('csrftoken');\r\n-\r\n       // Signup API call\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/',\r\n-        {\r\n-          username: username.trim(),\r\n-          email: email.trim(),\r\n-          password1: password,\r\n-          password2: confirmPassword,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n+      await axiosWithCsrf.post('/auth/', {\r\n+        username: username.trim(),\r\n+        email: email.trim(),\r\n+        password1: password,\r\n+        password2: confirmPassword,\r\n+      });\r\n \r\n       console.log('Signup successful');\r\n \r\n-      // Now, login immediately after signup\r\n-      await axios.post(\r\n-        'http://localhost:8000/auth/login/', // Adjust to your login endpoint\r\n-        {\r\n-          email: email.trim(),\r\n-          password: password,\r\n-        },\r\n-        {\r\n-          headers: {\r\n-            'Content-Type': 'application/json',\r\n-            'X-CSRFToken': csrfToken || '',\r\n-          },\r\n-        }\r\n-      );\r\n+      // Auto-login after signup\r\n+      await axiosWithCsrf.post('/auth/login/', {\r\n+        email: email.trim(),\r\n+        password: password,\r\n+      });\r\n \r\n       console.log('Login successful after signup');\r\n+      router.push('/');\r\n \r\n-      // Redirect to homepage or dashboard after auto-login\r\n-      router.push('/'); // or '/' or wherever you want\r\n-\r\n     } catch (err: any) {\r\n       console.error(err);\r\n \r\n       if (err.response?.data) {\r\n@@ -110,18 +76,17 @@\n   return (\r\n     <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n       <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n         <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n-        \r\n-        {/* Google Login */}\r\n-         <Button\r\n-            onClick={handleGoogleLogin}\r\n-            className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n-            variant=\"outline\"\r\n-          >\r\n-            <FcGoogle size={20} /> Continue with Google\r\n-          </Button>\r\n \r\n+        <Button\r\n+          onClick={handleGoogleLogin}\r\n+          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n+          variant=\"outline\"\r\n+        >\r\n+          <FcGoogle size={20} /> Continue with Google\r\n+        </Button>\r\n+\r\n         <form onSubmit={handleSignup} className=\"space-y-4\">\r\n           <div>\r\n             <label htmlFor=\"username\" className=\"text-sm font-medium text-gray-700\">\r\n               Username\r\n"
                }
            ],
            "date": 1748771940703,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport { HiEye, HiEyeOff } from 'react-icons/hi';\r\nimport { Button } from '@/components/ui/button';\r\n\r\nexport default function SignupPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSignup = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match!');\r\n      return;\r\n    }\r\n\r\n    console.log('Signup with', { email, password });\r\n    // TODO: Add signup logic (Firebase/Auth0/backend)\r\n  };\r\n\r\n  const handleGoogleSignup = () => {\r\n    console.log('Signup with Google clicked');\r\n    // TODO: Add Google OAuth signup logic\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center px-4 bg-gray-50\">\r\n      <div className=\"w-full max-w-md space-y-6 bg-white p-6 rounded-lg shadow-md\">\r\n        <h2 className=\"text-2xl font-bold text-center text-blue-700\">Create an Account</h2>\r\n\r\n        {/* Google Signup */}\r\n        <Button\r\n          onClick={handleGoogleSignup}\r\n          className=\"w-full flex items-center justify-center gap-2 border border-gray-300 bg-white text-gray-800 hover:bg-gray-100\"\r\n          variant=\"outline\"\r\n        >\r\n          <FcGoogle size={20} /> Continue with Google\r\n        </Button>\r\n\r\n        <div className=\"relative my-4\">\r\n          <div className=\"absolute inset-0 flex items-center\">\r\n            <div className=\"w-full border-t border-gray-300\" />\r\n          </div>\r\n          <div className=\"relative flex justify-center text-sm text-gray-500 bg-white px-2\">\r\n            or sign up with email\r\n          </div>\r\n        </div>\r\n\r\n        {/* Signup Form */}\r\n        <form onSubmit={handleSignup} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              required\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n              placeholder=\"you@example.com\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"relative\">\r\n            <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type={showPassword ? 'text' : 'password'}\r\n              id=\"password\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n              placeholder=\"••••••••\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowPassword(!showPassword)}\r\n              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n              aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n            >\r\n              {showPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"relative\">\r\n            <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type={showConfirmPassword ? 'text' : 'password'}\r\n              id=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              required\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              className=\"w-full mt-1 pr-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\r\n              placeholder=\"••••••••\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n              className=\"absolute top-[38px] right-3 text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n              aria-label={showConfirmPassword ? 'Hide confirm password' : 'Show confirm password'}\r\n            >\r\n              {showConfirmPassword ? <HiEyeOff size={20} /> : <HiEye size={20} />}\r\n            </button>\r\n          </div>\r\n\r\n          {error && (\r\n            <p className=\"text-sm text-red-600 text-center\">\r\n              {error}\r\n            </p>\r\n          )}\r\n\r\n          <Button type=\"submit\" className=\"w-full\">\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n\r\n        <p className=\"text-center text-sm text-gray-500\">\r\n          Already have an account?{' '}\r\n          <Link href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n            Login here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}
{
    "sourceFile": "app/checkout/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1748772985947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748775786295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n 'use client';\r\n \r\n-import { useState } from 'react';\r\n+import { useState, useEffect } from 'react';\r\n \r\n interface CartItem {\r\n   id: number;\r\n   name: string;\r\n@@ -9,26 +9,39 @@\n   quantity: number;\r\n   image: string;\r\n }\r\n \r\n+import CheckoutSkeleton from './CheckoutSkeleton';\r\n+\r\n export default function CheckoutPage() {\r\n-  const [cartItems, setCartItems] = useState<CartItem[]>([\r\n-    {\r\n-      id: 1,\r\n-      name: 'Margherita Pizza',\r\n-      price: 299,\r\n-      quantity: 1,\r\n-      image: '/images/pizza.jpg',\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      name: 'Cheeseburger',\r\n-      price: 199,\r\n-      quantity: 2,\r\n-      image: '/images/burger.jpg',\r\n-    },\r\n-  ]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [cartItems, setCartItems] = useState<CartItem[]>([]);\r\n \r\n+  useEffect(() => {\r\n+    // Simulate loading delay\r\n+    const timer = setTimeout(() => {\r\n+      setCartItems([\r\n+        {\r\n+          id: 1,\r\n+          name: 'Margherita Pizza',\r\n+          price: 299,\r\n+          quantity: 1,\r\n+          image: '/images/pizza.jpg',\r\n+        },\r\n+        {\r\n+          id: 2,\r\n+          name: 'Cheeseburger',\r\n+          price: 199,\r\n+          quantity: 2,\r\n+          image: '/images/burger.jpg',\r\n+        },\r\n+      ]);\r\n+      setLoading(false);\r\n+    }, 2000); // 2 seconds delay\r\n+\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n   const handleQuantityChange = (id: number, delta: number) => {\r\n     setCartItems((prevItems) =>\r\n       prevItems.map((item) =>\r\n         item.id === id\r\n@@ -42,8 +55,12 @@\n   };\r\n \r\n   const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n \r\n+  if (loading) {\r\n+    return <CheckoutSkeleton />;\r\n+  }\r\n+\r\n   return (\r\n     <div className=\"max-w-4xl mx-auto p-6\">\r\n       <h1 className=\"text-2xl font-semibold mb-6\">Checkout</h1>\r\n \r\n"
                },
                {
                    "date": 1748775798175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,114 @@\n+'use client';\r\n+\r\n+import { useState, useEffect } from 'react';\r\n+\r\n+interface CartItem {\r\n+  id: number;\r\n+  name: string;\r\n+  price: number;\r\n+  quantity: number;\r\n+  image: string;\r\n+}\r\n+\r\n+import CheckoutSkeleton from '@';\r\n+\r\n+export default function CheckoutPage() {\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [cartItems, setCartItems] = useState<CartItem[]>([]);\r\n+\r\n+  useEffect(() => {\r\n+    // Simulate loading delay\r\n+    const timer = setTimeout(() => {\r\n+      setCartItems([\r\n+        {\r\n+          id: 1,\r\n+          name: 'Margherita Pizza',\r\n+          price: 299,\r\n+          quantity: 1,\r\n+          image: '/images/pizza.jpg',\r\n+        },\r\n+        {\r\n+          id: 2,\r\n+          name: 'Cheeseburger',\r\n+          price: 199,\r\n+          quantity: 2,\r\n+          image: '/images/burger.jpg',\r\n+        },\r\n+      ]);\r\n+      setLoading(false);\r\n+    }, 2000); // 2 seconds delay\r\n+\r\n+    return () => clearTimeout(timer);\r\n+  }, []);\r\n+\r\n+  const handleQuantityChange = (id: number, delta: number) => {\r\n+    setCartItems((prevItems) =>\r\n+      prevItems.map((item) =>\r\n+        item.id === id\r\n+          ? {\r\n+              ...item,\r\n+              quantity: Math.max(item.quantity + delta, 1),\r\n+            }\r\n+          : item\r\n+      )\r\n+    );\r\n+  };\r\n+\r\n+  const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n+\r\n+  if (loading) {\r\n+    return <CheckoutSkeleton />;\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"max-w-4xl mx-auto p-6\">\r\n+      <h1 className=\"text-2xl font-semibold mb-6\">Checkout</h1>\r\n+\r\n+      <div className=\"space-y-4\">\r\n+        {cartItems.map((item) => (\r\n+          <div\r\n+            key={item.id}\r\n+            className=\"flex items-center justify-between bg-white rounded-lg shadow p-4\"\r\n+          >\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <img src={item.image} alt={item.name} className=\"h-16 w-16 object-cover rounded\" />\r\n+              <div>\r\n+                <h2 className=\"text-lg font-medium\">{item.name}</h2>\r\n+                <p className=\"text-gray-500\">₹{item.price}</p>\r\n+              </div>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-3\">\r\n+              <button\r\n+                onClick={() => handleQuantityChange(item.id, -1)}\r\n+                className=\"bg-gray-200 px-2 rounded\"\r\n+              >\r\n+                −\r\n+              </button>\r\n+              <span>{item.quantity}</span>\r\n+              <button\r\n+                onClick={() => handleQuantityChange(item.id, 1)}\r\n+                className=\"bg-gray-200 px-2 rounded\"\r\n+              >\r\n+                +\r\n+              </button>\r\n+            </div>\r\n+            <div className=\"text-right\">\r\n+              <p className=\"text-sm text-gray-600\">Subtotal</p>\r\n+              <p className=\"font-semibold\">₹{item.price * item.quantity}</p>\r\n+            </div>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+\r\n+      <div className=\"mt-8 border-t pt-6 flex justify-between items-center\">\r\n+        <div>\r\n+          <h2 className=\"text-xl font-semibold\">Total:</h2>\r\n+          <p className=\"text-lg text-green-600 font-bold\">₹{total}</p>\r\n+        </div>\r\n+        <button className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-md text-lg\">\r\n+          Proceed to Payment\r\n+        </button>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1748775806114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   quantity: number;\r\n   image: string;\r\n }\r\n \r\n-import CheckoutSkeleton from '@';\r\n+import CheckoutSkeleton from '@/components/CheckoutSkeleton';\r\n \r\n export default function CheckoutPage() {\r\n   const [loading, setLoading] = useState(true);\r\n   const [cartItems, setCartItems] = useState<CartItem[]>([]);\r\n@@ -111,118 +111,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useState, useEffect } from 'react';\r\n-\r\n-interface CartItem {\r\n-  id: number;\r\n-  name: string;\r\n-  price: number;\r\n-  quantity: number;\r\n-  image: string;\r\n-}\r\n-\r\n-import CheckoutSkeleton from './CheckoutSkeleton';\r\n-\r\n-export default function CheckoutPage() {\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [cartItems, setCartItems] = useState<CartItem[]>([]);\r\n-\r\n-  useEffect(() => {\r\n-    // Simulate loading delay\r\n-    const timer = setTimeout(() => {\r\n-      setCartItems([\r\n-        {\r\n-          id: 1,\r\n-          name: 'Margherita Pizza',\r\n-          price: 299,\r\n-          quantity: 1,\r\n-          image: '/images/pizza.jpg',\r\n-        },\r\n-        {\r\n-          id: 2,\r\n-          name: 'Cheeseburger',\r\n-          price: 199,\r\n-          quantity: 2,\r\n-          image: '/images/burger.jpg',\r\n-        },\r\n-      ]);\r\n-      setLoading(false);\r\n-    }, 2000); // 2 seconds delay\r\n-\r\n-    return () => clearTimeout(timer);\r\n-  }, []);\r\n-\r\n-  const handleQuantityChange = (id: number, delta: number) => {\r\n-    setCartItems((prevItems) =>\r\n-      prevItems.map((item) =>\r\n-        item.id === id\r\n-          ? {\r\n-              ...item,\r\n-              quantity: Math.max(item.quantity + delta, 1),\r\n-            }\r\n-          : item\r\n-      )\r\n-    );\r\n-  };\r\n-\r\n-  const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n-\r\n-  if (loading) {\r\n-    return <CheckoutSkeleton />;\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"max-w-4xl mx-auto p-6\">\r\n-      <h1 className=\"text-2xl font-semibold mb-6\">Checkout</h1>\r\n-\r\n-      <div className=\"space-y-4\">\r\n-        {cartItems.map((item) => (\r\n-          <div\r\n-            key={item.id}\r\n-            className=\"flex items-center justify-between bg-white rounded-lg shadow p-4\"\r\n-          >\r\n-            <div className=\"flex items-center space-x-4\">\r\n-              <img src={item.image} alt={item.name} className=\"h-16 w-16 object-cover rounded\" />\r\n-              <div>\r\n-                <h2 className=\"text-lg font-medium\">{item.name}</h2>\r\n-                <p className=\"text-gray-500\">₹{item.price}</p>\r\n-              </div>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-3\">\r\n-              <button\r\n-                onClick={() => handleQuantityChange(item.id, -1)}\r\n-                className=\"bg-gray-200 px-2 rounded\"\r\n-              >\r\n-                −\r\n-              </button>\r\n-              <span>{item.quantity}</span>\r\n-              <button\r\n-                onClick={() => handleQuantityChange(item.id, 1)}\r\n-                className=\"bg-gray-200 px-2 rounded\"\r\n-              >\r\n-                +\r\n-              </button>\r\n-            </div>\r\n-            <div className=\"text-right\">\r\n-              <p className=\"text-sm text-gray-600\">Subtotal</p>\r\n-              <p className=\"font-semibold\">₹{item.price * item.quantity}</p>\r\n-            </div>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-\r\n-      <div className=\"mt-8 border-t pt-6 flex justify-between items-center\">\r\n-        <div>\r\n-          <h2 className=\"text-xl font-semibold\">Total:</h2>\r\n-          <p className=\"text-lg text-green-600 font-bold\">₹{total}</p>\r\n-        </div>\r\n-        <button className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-md text-lg\">\r\n-          Proceed to Payment\r\n-        </button>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                }
            ],
            "date": 1748772985947,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\n\r\ninterface CartItem {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n  image: string;\r\n}\r\n\r\nexport default function CheckoutPage() {\r\n  const [cartItems, setCartItems] = useState<CartItem[]>([\r\n    {\r\n      id: 1,\r\n      name: 'Margherita Pizza',\r\n      price: 299,\r\n      quantity: 1,\r\n      image: '/images/pizza.jpg',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Cheeseburger',\r\n      price: 199,\r\n      quantity: 2,\r\n      image: '/images/burger.jpg',\r\n    },\r\n  ]);\r\n\r\n  const handleQuantityChange = (id: number, delta: number) => {\r\n    setCartItems((prevItems) =>\r\n      prevItems.map((item) =>\r\n        item.id === id\r\n          ? {\r\n              ...item,\r\n              quantity: Math.max(item.quantity + delta, 1),\r\n            }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-semibold mb-6\">Checkout</h1>\r\n\r\n      <div className=\"space-y-4\">\r\n        {cartItems.map((item) => (\r\n          <div\r\n            key={item.id}\r\n            className=\"flex items-center justify-between bg-white rounded-lg shadow p-4\"\r\n          >\r\n            <div className=\"flex items-center space-x-4\">\r\n              <img src={item.image} alt={item.name} className=\"h-16 w-16 object-cover rounded\" />\r\n              <div>\r\n                <h2 className=\"text-lg font-medium\">{item.name}</h2>\r\n                <p className=\"text-gray-500\">₹{item.price}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-3\">\r\n              <button\r\n                onClick={() => handleQuantityChange(item.id, -1)}\r\n                className=\"bg-gray-200 px-2 rounded\"\r\n              >\r\n                −\r\n              </button>\r\n              <span>{item.quantity}</span>\r\n              <button\r\n                onClick={() => handleQuantityChange(item.id, 1)}\r\n                className=\"bg-gray-200 px-2 rounded\"\r\n              >\r\n                +\r\n              </button>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-sm text-gray-600\">Subtotal</p>\r\n              <p className=\"font-semibold\">₹{item.price * item.quantity}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"mt-8 border-t pt-6 flex justify-between items-center\">\r\n        <div>\r\n          <h2 className=\"text-xl font-semibold\">Total:</h2>\r\n          <p className=\"text-lg text-green-600 font-bold\">₹{total}</p>\r\n        </div>\r\n        <button className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-md text-lg\">\r\n          Proceed to Payment\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}
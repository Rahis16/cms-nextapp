{
    "sourceFile": "components/ConditionalLayout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1749225803651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749225952884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +0,0 @@\n-// app/components/ConditionalLayout.tsx (client component)\r\n-'use client';\r\n-\r\n-import { usePathname } from 'next/navigation';\r\n-import Navbar from '@/components/Navbar';\r\n-import Footer from '@/components/Footer';\r\n-\r\n-export default function ConditionalLayout({ children }: { children: React.ReactNode }) {\r\n-  const pathname = usePathname();\r\n-  const isAdminRoute = pathname?.startsWith('/admin');\r\n-\r\n-  return (\r\n-    <>\r\n-      {!isAdminRoute && <Navbar />}\r\n-      <div className=\"min-h-screen flex justify-center px-1 pt-3\">\r\n-        <main className=\"w-full max-w-[1200px]\">{children}</main>\r\n-      </div>\r\n-      {!isAdminRoute && <Footer />}\r\n-    </>\r\n-  );\r\n-}\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1749226155590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +0,0 @@\n-\n\\ No newline at end of file\n"
                },
                {
                    "date": 1749226263653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,21 @@\n+// app/components/ConditionalLayout.tsx (client component)\r\n+'use client';\r\n+\r\n+import { usePathname } from 'next/navigation';\r\n+import Navbar from '@/components/Navbar';\r\n+import Footer from '@/components/Footer';\r\n+\r\n+export default function ConditionalLayout({ children }: { children: React.ReactNode }) {\r\n+  const pathname = usePathname();\r\n+  const isAdminRoute = pathname?.startsWith('/admin');\r\n+\r\n+  return (\r\n+    <>\r\n+      {!isAdminRoute && <Navbar />}\r\n+      <div className=\"min-h-screen flex justify-center px-1 pt-3\">\r\n+        <main className=\"w-full max-w-[1200px]\">{children}</main>\r\n+      </div>\r\n+      {!isAdminRoute && <Footer />}\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749226850172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,21 @@\n \r\n   return (\r\n     <>\r\n       {!isAdminRoute && <Navbar />}\r\n-      <div className=\"min-h-screen flex justify-center px-1 pt-3\">\r\n-        <main className=\"w-full max-w-[1200px]\">{children}</main>\r\n-      </div>\r\n-      {!isAdminRoute && <Footer />}\r\n+\r\n+  {isAdminRoute ? (\r\n+    // For admin routes, render children directly or with a different wrapper\r\n+    <div className=\"min-h-screen p-4 bg-gray-900 text-white\">\r\n+      {children}\r\n+    </div>\r\n+  ) : (\r\n+    // For non-admin routes, keep your normal main wrapper\r\n+    <div className=\"min-h-screen flex justify-center px-1 pt-3\">\r\n+      <main className=\"w-full max-w-[1200px]\">{children}</main>\r\n+    </div>\r\n+  )}\r\n+\r\n+  {!isAdminRoute && <Footer />}\r\n     </>\r\n   );\r\n }\r\n-\n"
                },
                {
                    "date": 1749226875991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,35 @@\n // app/components/ConditionalLayout.tsx (client component)\r\n-'use client';\r\n+\"use client\";\r\n \r\n-import { usePathname } from 'next/navigation';\r\n-import Navbar from '@/components/Navbar';\r\n-import Footer from '@/components/Footer';\r\n+import { usePathname } from \"next/navigation\";\r\n+import Navbar from \"@/components/Navbar\";\r\n+import Footer from \"@/components/Footer\";\r\n \r\n-export default function ConditionalLayout({ children }: { children: React.ReactNode }) {\r\n+export default function ConditionalLayout({\r\n+  children,\r\n+}: {\r\n+  children: React.ReactNode;\r\n+}) {\r\n   const pathname = usePathname();\r\n-  const isAdminRoute = pathname?.startsWith('/admin');\r\n+  const isAdminRoute = pathname?.startsWith(\"/admin\");\r\n \r\n   return (\r\n     <>\r\n       {!isAdminRoute && <Navbar />}\r\n \r\n-  {isAdminRoute ? (\r\n-    // For admin routes, render children directly or with a different wrapper\r\n-    <div className=\"min-h-screen p-4 bg-gray-900 text-white\">\r\n-      {children}\r\n-    </div>\r\n-  ) : (\r\n-    // For non-admin routes, keep your normal main wrapper\r\n-    <div className=\"min-h-screen flex justify-center px-1 pt-3\">\r\n-      <main className=\"w-full max-w-[1200px]\">{children}</main>\r\n-    </div>\r\n-  )}\r\n+      {isAdminRoute ? (\r\n+        // For admin routes, render children directly or with a different wrapper\r\n+        <div className=\"min-h-screen p-4 bg-gray-900 text-white\">\r\n+          {children}\r\n+        </div>\r\n+      ) : (\r\n+        // For non-admin routes, keep your normal main wrapper\r\n+        <div className=\"min-h-screen flex justify-center px-1 pt-3\">\r\n+          <main className=\"w-full max-w-[1200px]\">{children}</main>\r\n+        </div>\r\n+      )}\r\n \r\n-  {!isAdminRoute && <Footer />}\r\n+      {!isAdminRoute && <Footer />}\r\n     </>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1749226894640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       {!isAdminRoute && <Navbar />}\r\n \r\n       {isAdminRoute ? (\r\n         // For admin routes, render children directly or with a different wrapper\r\n-        <div className=\"min-h-screen p-4 bg-gray-900 text-white\">\r\n+        <div className=\"min-h-screen p-4 text-white\">\r\n           {children}\r\n         </div>\r\n       ) : (\r\n         // For non-admin routes, keep your normal main wrapper\r\n"
                },
                {
                    "date": 1749226907915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+// app/components/ConditionalLayout.tsx (client component)\r\n+\"use client\";\r\n+\r\n+import { usePathname } from \"next/navigation\";\r\n+import Navbar from \"@/components/Navbar\";\r\n+import Footer from \"@/components/Footer\";\r\n+\r\n+export default function ConditionalLayout({\r\n+  children,\r\n+}: {\r\n+  children: React.ReactNode;\r\n+}) {\r\n+  const pathname = usePathname();\r\n+  const isAdminRoute = pathname?.startsWith(\"/admin\");\r\n+\r\n+  return (\r\n+    <>\r\n+      {!isAdminRoute && <Navbar />}\r\n+\r\n+      {isAdminRoute ? (\r\n+        // For admin routes, render children directly or with a different wrapper\r\n+        <div className=\"min-h-screen p-1 text-white\">\r\n+          {children}\r\n+        </div>\r\n+      ) : (\r\n+        // For non-admin routes, keep your normal main wrapper\r\n+        <div className=\"min-h-screen flex justify-center px-1 pt-3\">\r\n+          <main className=\"w-full max-w-[1200px]\">{children}</main>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {!isAdminRoute && <Footer />}\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1749226914999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       {!isAdminRoute && <Navbar />}\r\n \r\n       {isAdminRoute ? (\r\n         // For admin routes, render children directly or with a different wrapper\r\n-        <div className=\"min-h-screen p-1 text-white\">\r\n+        <div className=\"min-h-screen text-white\">\r\n           {children}\r\n         </div>\r\n       ) : (\r\n         // For non-admin routes, keep your normal main wrapper\r\n@@ -32,39 +32,4 @@\n       {!isAdminRoute && <Footer />}\r\n     </>\r\n   );\r\n }\r\n-// app/components/ConditionalLayout.tsx (client component)\r\n-\"use client\";\r\n-\r\n-import { usePathname } from \"next/navigation\";\r\n-import Navbar from \"@/components/Navbar\";\r\n-import Footer from \"@/components/Footer\";\r\n-\r\n-export default function ConditionalLayout({\r\n-  children,\r\n-}: {\r\n-  children: React.ReactNode;\r\n-}) {\r\n-  const pathname = usePathname();\r\n-  const isAdminRoute = pathname?.startsWith(\"/admin\");\r\n-\r\n-  return (\r\n-    <>\r\n-      {!isAdminRoute && <Navbar />}\r\n-\r\n-      {isAdminRoute ? (\r\n-        // For admin routes, render children directly or with a different wrapper\r\n-        <div className=\"min-h-screen p-4 text-white\">\r\n-          {children}\r\n-        </div>\r\n-      ) : (\r\n-        // For non-admin routes, keep your normal main wrapper\r\n-        <div className=\"min-h-screen flex justify-center px-1 pt-3\">\r\n-          <main className=\"w-full max-w-[1200px]\">{children}</main>\r\n-        </div>\r\n-      )}\r\n-\r\n-      {!isAdminRoute && <Footer />}\r\n-    </>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1749226922214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       {!isAdminRoute && <Navbar />}\r\n \r\n       {isAdminRoute ? (\r\n         // For admin routes, render children directly or with a different wrapper\r\n-        <div className=\"min-h-screen text-white\">\r\n+        <div className=\"min-h-screenp-1 text-white\">\r\n           {children}\r\n         </div>\r\n       ) : (\r\n         // For non-admin routes, keep your normal main wrapper\r\n"
                },
                {
                    "date": 1749226985391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       {!isAdminRoute && <Navbar />}\r\n \r\n       {isAdminRoute ? (\r\n         // For admin routes, render children directly or with a different wrapper\r\n-        <div className=\"min-h-screenp-1 text-white\">\r\n+        <div className=\"min-h-screenp-1\">\r\n           {children}\r\n         </div>\r\n       ) : (\r\n         // For non-admin routes, keep your normal main wrapper\r\n"
                }
            ],
            "date": 1749225803651,
            "name": "Commit-0",
            "content": "// app/components/ConditionalLayout.tsx (client component)\r\n'use client';\r\n\r\nimport { usePathname } from 'next/navigation';\r\nimport Navbar from '@/components/Navbar';\r\nimport Footer from '@/components/Footer';\r\n\r\nexport default function ConditionalLayout({ children }: { children: React.ReactNode }) {\r\n  const pathname = usePathname();\r\n  const isAdminRoute = pathname?.startsWith('/admin');\r\n\r\n  return (\r\n    <>\r\n      {!isAdminRoute && <Navbar />}\r\n      <div className=\"min-h-screen flex justify-center px-1 pt-3\">\r\n        <main className=\"w-full max-w-[1200px]\">{children}</main>\r\n      </div>\r\n      {!isAdminRoute && <Footer />}\r\n    </>\r\n  );\r\n}\r\n"
        }
    ]
}